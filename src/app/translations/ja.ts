export const ja = {
  'app.title': 'テキストコンバーター',
  'nav.home': 'ホーム',
  'nav.case-converter': '大文字小文字変換',
  'nav.text-formatter': 'テキストフォーマッター',
  'nav.line-tools': 'ラインツール',
  'nav.encode-decode': 'エンコード/デコード',
  'nav.text-analyzer': 'テキストアナライザー',
  'nav.text-generator': 'テキストジェネレーター',
  'nav.text-transformation': 'テキスト変換',
  'nav.analysis-utilities': '分析とユーティリティ',
  'nav.json': 'JSON',
  'nav.json-formatter': 'フォーマッター',
  'nav.json-parser': 'パーサー',
  'nav.js-formatter': 'JavaScript',
  'nav.xml-formatter': 'XML',
  'nav.html-formatter': 'HTML',
  'nav.css-formatter': 'CSS',
  'nav.sql-formatter': 'SQL',
  'nav.blog': 'ブログ',
  'blog.title': 'ブログ',
  'blog.subtitle':
    'Expert tips and guides on text processing, case conversion, programming conventions, SEO best practices, and accessibility guidelines.',
  'blog.search-placeholder': 'ブログ記事を検索...',
  'json-utility.title': 'JSONフォーマッター＆バリデーター',
  'json-utility.subtitle':
    'JSONデータを瞬時にフォーマット、検証、美化します。開発者やデータアナリスト向けのプロフェッショナルなJSONツール。',
  'json-utility.input': 'JSON入力',
  'json-utility.output': 'JSON出力',
  'json-utility.load-sample': 'サンプルを読み込み',
  'json-utility.clear-all': 'すべてクリア',
  'json-utility.upload-file': 'ファイルをアップロード',
  'json-utility.copy': 'コピー',
  'json-utility.download': 'ダウンロード',
  'json-utility.formatted': 'フォーマット済み',
  'json-utility.minified': 'ミニファイ済み',
  'json-utility.stats': '統計',
  'json-utility.errors': 'エラー',
  'json-utility.warnings': '警告',
  'json-utility.valid-json': '有効なJSON',
  'json-utility.format-options': 'フォーマットオプション',
  'json-utility.indent-size': 'インデントサイズ',
  'json-utility.sort-keys': 'キーをソート',
  'json-utility.features-title': '強力なJSONツール',
  'json-utility.validation': 'JSON検証',
  'json-utility.validation-desc': '詳細なエラーメッセージと行番号でJSON構文を検証します。',
  'css-formatter.title': 'CSSフォーマッター＆ビューティファイアー',
  'css-formatter.subtitle':
    'Format, minify, validate, and optimize your CSS code with comprehensive tools.',
  'css-formatter.input': 'CSS入力',
  'css-formatter.output': 'フォーマット済みCSS',
  'css-formatter.minified-output': '圧縮済みCSS',
  'css-formatter.validation-results': '検証結果',
  'css-formatter.optimized-output': '最適化済みCSS',
  'css-formatter.converted-output': '変換済みCSS',
  'css-formatter.lint-results': 'リント結果',
  'css-formatter.format-css': 'CSSフォーマット',
  'css-formatter.minify-css': 'CSS圧縮',
  'css-formatter.validate-css': 'CSS検証',
  'css-formatter.optimize-css': 'CSS最適化',
  'css-formatter.convert-css': 'CSS変換',
  'css-formatter.lint-css': 'CSSリント',
  'css-formatter.load-sample': 'サンプル読み込み',
  'css-formatter.clear-all': 'すべてクリア',
  'css-formatter.copy': 'コピー',
  'css-formatter.download': 'ダウンロード',
  'css-formatter.clear': 'クリア',
  'css-formatter.format-options': 'フォーマットオプション',
  'css-formatter.indent-size': 'インデントサイズ',
  'css-formatter.indent-type': 'インデントタイプ',
  'css-formatter.preserve-comments': 'コメント保持',
  'css-formatter.sort-properties': 'プロパティソート',
  'css-formatter.css-tools': 'CSSツール',
  'css-formatter.css-statistics': 'CSS統計',
  'css-formatter.original-length': '元の長さ',
  'css-formatter.formatted-length': 'フォーマット済み長さ',
  'css-formatter.lines': '行数',
  'css-formatter.rules': 'ルール',
  'css-formatter.selectors': 'セレクター',
  'css-formatter.properties': 'プロパティ',
  'css-formatter.comments': 'コメント',
  'css-formatter.compression': '圧縮',
  'css-formatter.errors': 'エラー',
  'css-formatter.warnings': '警告',
  'css-formatter.processing': 'CSS処理中...',
  'css-formatter.features-title': '包括的CSSツール',
  'css-formatter.formatting': 'CSSフォーマット',
  'css-formatter.formatting-desc':
    'Beautify and format your CSS code with proper indentation and organization.',
  'css-formatter.minification': 'CSS圧縮',
  'css-formatter.minification-desc':
    'Compress your CSS files to reduce file size and improve loading performance.',
  'css-formatter.validation': 'CSS検証',
  'css-formatter.validation-desc':
    'Validate your CSS code for syntax errors and browser compatibility issues.',
  'css-formatter.optimization': 'CSS最適化',
  'css-formatter.optimization-desc':
    'Optimize your CSS for better performance and maintainability.',
  'css-formatter.conversion': 'CSS変換',
  'css-formatter.conversion-desc':
    'Convert CSS to SCSS, SASS, LESS, or Stylus preprocessor formats.',
  'css-formatter.linting': 'CSSリント',
  'css-formatter.linting-desc': 'CSSコードのベストプラクティスと潜在的な問題をチェックします。',
  'css-formatter.performance-metrics': 'パフォーマンス指標',
  'css-formatter.original-size': '元のサイズ',
  'css-formatter.formatted-size': 'フォーマット済みサイズ',
  'css-formatter.size-savings': 'サイズ節約',
  'css-formatter.css-tools-explanation': 'CSSツールと機能',
  'css-formatter.benefits-title': 'なぜ私たちのCSSツールを使うのか？',
  'css-formatter.benefit-1': 'コードの可読性と保守性の向上',
  'css-formatter.benefit-2': 'より高速な読み込み時間のためのファイルサイズ削減',
  'css-formatter.benefit-3': '構文エラーと互換性問題の検出',
  'css-formatter.benefit-4': '異なるCSSプリプロセッサー形式間の変換',
  'css-formatter.faq-title': 'よくある質問',
  'css-formatter.faq1-question': 'CSSフォーマットとは何か、なぜ重要なのか？',
  'css-formatter.faq1-answer':
    'CSS formatting is the process of organizing and structuring your CSS code with proper indentation, spacing, and organization. It improves code readability, makes debugging easier, and helps maintain consistent coding standards across projects.',
  'css-formatter.faq2-question': 'CSS圧縮はどのようにウェブサイトのパフォーマンスを向上させるか？',
  'css-formatter.faq2-answer':
    'CSS minification removes unnecessary whitespace, comments, and redundant code from your stylesheets. This reduces file size by 20-50%, leading to faster page load times, reduced bandwidth usage, and improved user experience, especially on mobile devices.',
  'css-formatter.faq3-question': 'どのようなCSS検証エラーに注意すべきか？',
  'css-formatter.faq3-answer':
    'Common CSS validation errors include missing semicolons, unmatched braces, invalid property values, unsupported CSS properties, and syntax errors. Our validator helps identify these issues before they cause rendering problems in browsers.',
  'css-formatter.faq4-question': 'CSSをSCSS、SASS、LESS、Stylusに変換できますか？',
  'css-formatter.faq4-answer':
    'Yes! Our CSS converter supports conversion to popular preprocessor formats including SCSS, SASS, LESS, and Stylus. This helps you migrate existing CSS projects to use preprocessor features like variables, mixins, and nesting.',
  'css-formatter.faq5-question': 'CSSリントとは何か、どのように役立つか？',
  'css-formatter.faq5-answer':
    'CSS linting analyzes your code for potential issues, best practices violations, and style inconsistencies. It helps maintain code quality, prevents common mistakes, and ensures your CSS follows modern standards and conventions.',
  'css-formatter.blog-title': 'CSSフォーマットについてもっと学ぶ',
  'css-formatter.blog-description':
    'Master CSS formatting with our comprehensive guide covering best practices, tools, and techniques. Learn how to format, beautify, minify, and validate CSS code effectively.',
  'css-formatter.blog-link': 'CSSフォーマッターガイドを読む',
  'sql-formatter.title': 'SQLフォーマッター＆ビューティファイアー',
  'sql-formatter.subtitle': '包括的なツールでSQLクエリをフォーマット、圧縮、検証、最適化します。',
  'sql-formatter.input': 'SQL入力',
  'sql-formatter.output': 'フォーマット済みSQL',
  'sql-formatter.minified-output': '圧縮済みSQL',
  'sql-formatter.validation-results': '検証結果',
  'sql-formatter.optimized-output': '最適化済みSQL',
  'sql-formatter.converted-output': '変換済みSQL',
  'sql-formatter.lint-results': 'Lint結果',
  'sql-formatter.format-sql': 'SQLをフォーマット',
  'sql-formatter.minify-sql': 'SQLを圧縮',
  'sql-formatter.validate-sql': 'SQLを検証',
  'sql-formatter.optimize-sql': 'SQLを最適化',
  'sql-formatter.convert-sql': 'SQLを変換',
  'sql-formatter.lint-sql': 'SQLをLint',
  'sql-formatter.load-sample': 'サンプルを読み込み',
  'sql-formatter.clear-all': 'すべてクリア',
  'sql-formatter.copy': 'コピー',
  'sql-formatter.download': 'ダウンロード',
  'sql-formatter.clear': 'クリア',
  'sql-formatter.format-options': 'フォーマットオプション',
  'sql-formatter.indent-size': 'インデントサイズ',
  'sql-formatter.indent-type': 'インデントタイプ',
  'sql-formatter.preserve-comments': 'コメントを保持',
  'sql-formatter.sort-keywords': 'キーワードをソート',
  'sql-formatter.keyword-case': 'キーワードケース',
  'sql-formatter.function-case': '関数ケース',
  'sql-formatter.data-type-case': 'データタイプケース',
  'sql-formatter.align-columns': '列を整列',
  'sql-formatter.max-line-length': '最大行長',
  'sql-formatter.add-semicolon': 'セミコロンを追加',
  'sql-formatter.remove-extra-spaces': '余分なスペースを削除',
  'sql-formatter.sql-tools': 'SQLツール',
  'sql-formatter.sql-statistics': 'SQL統計',
  'sql-formatter.original-length': '元の長さ',
  'sql-formatter.formatted-length': 'フォーマット後の長さ',
  'sql-formatter.lines': '行数',
  'sql-formatter.statements': 'ステートメント',
  'sql-formatter.keywords': 'キーワード',
  'sql-formatter.tables': 'テーブル',
  'sql-formatter.columns': 'カラム',
  'sql-formatter.compression': '圧縮',
  'sql-formatter.errors': 'エラー',
  'sql-formatter.warnings': '警告',
  'sql-formatter.processing': 'SQL処理中...',
  'sql-formatter.features-title': '包括的なSQLツール',
  'sql-formatter.formatting': 'SQLフォーマット',
  'sql-formatter.formatting-desc': '適切なインデントと整理でSQLクエリを美しくフォーマットします。',
  'sql-formatter.minification': 'SQL圧縮',
  'sql-formatter.minification-desc':
    'SQLクエリを圧縮してファイルサイズを削減し、パフォーマンスを向上させます。',
  'sql-formatter.validation': 'SQL検証',
  'sql-formatter.validation-desc': 'SQLクエリの構文エラーとデータベース互換性の問題を検証します。',
  'sql-formatter.optimization': 'SQL最適化',
  'sql-formatter.optimization-desc':
    'より良いパフォーマンスと効率のためにSQLクエリを最適化します。',
  'sql-formatter.conversion': 'SQL変換',
  'sql-formatter.conversion-desc':
    '異なるデータベース方言間でSQLを変換します（MySQL、PostgreSQL、SQL Serverなど）。',
  'sql-formatter.linting': 'SQLリンティング',
  'sql-formatter.linting-desc':
    'ベストプラクティスと潜在的な問題についてSQLコードをチェックします。',
  'sql-formatter.performance-metrics': 'パフォーマンス指標',
  'sql-formatter.original-size': '元のサイズ',
  'sql-formatter.formatted-size': 'フォーマット後のサイズ',
  'sql-formatter.size-savings': 'サイズ削減',
  'sql-formatter.sql-tools-explanation': 'SQLツールと機能',
  'sql-formatter.benefits-title': 'なぜ私たちのSQLツールを使用するのか？',
  'sql-formatter.benefit-1': 'クエリの可読性と保守性を向上',
  'sql-formatter.benefit-2': 'クエリの複雑さを軽減し、パフォーマンスを向上',
  'sql-formatter.benefit-3': '構文エラーとデータベース互換性の問題をキャッチ',
  'sql-formatter.benefit-4': '異なるデータベース方言間で変換',
  'sql-formatter.faq-title': 'よくある質問',
  'sql-formatter.faq1-question': 'SQLフォーマットとは何ですか？なぜ重要ですか？',
  'sql-formatter.faq1-answer':
    'SQLフォーマットは、適切なインデント、スペース、整理でSQLクエリを構造化するプロセスです。コードの可読性を向上させ、デバッグを容易にし、データベースプロジェクト全体で一貫したコーディング標準を維持するのに役立ちます。',
  'sql-formatter.faq2-question': 'SQL圧縮はデータベースパフォーマンスをどのように改善しますか？',
  'sql-formatter.faq2-answer':
    'SQL圧縮は、クエリから不要な空白、コメント、冗長なコードを削除します。これによりクエリサイズが削減され、解析速度が向上し、特に複雑なクエリでデータベース操作のパフォーマンスが向上します。',
  'sql-formatter.faq3-question': 'どのようなSQL検証エラーに注意すべきですか？',
  'sql-formatter.faq3-answer':
    '一般的なSQL検証エラーには、セミコロンの欠落、一致しない括弧、無効な構文、サポートされていないキーワード、データベース固有の互換性の問題が含まれます。私たちのバリデーターは、実行問題を引き起こす前にこれらの問題を特定するのに役立ちます。',
  'sql-formatter.faq4-question': '異なるデータベース方言間でSQLを変換できますか？',
  'sql-formatter.faq4-answer':
    'はい！私たちのSQLコンバーターは、MySQL、PostgreSQL、SQL Server、Oracle、SQLiteなどの人気のあるデータベース方言間の変換をサポートしています。これにより、異なるデータベースシステム間でクエリを移行できます。',
  'sql-formatter.faq5-question': 'SQLリンティングとは何ですか？どのように役立ちますか？',
  'sql-formatter.faq5-answer':
    'SQLリンティングは、潜在的な問題、ベストプラクティスの違反、パフォーマンスの問題についてクエリを分析します。コード品質の維持、一般的なミスの防止、SQLが現代の標準と規約に従うことを保証するのに役立ちます。',
  'sql-formatter.blog-title': 'SQLフォーマットについてもっと学ぶ',
  'sql-formatter.blog-description':
    'ベストプラクティス、ツール、テクニックをカバーする包括的なガイドでSQLフォーマットをマスターしましょう。SQLクエリを効果的にフォーマット、美化、圧縮、検証する方法を学びます。',
  'sql-formatter.blog-link': 'SQLフォーマッターガイドを読む',
  'json-utility.formatting': 'JSONフォーマット',
  'json-utility.formatting-desc':
    'カスタマイズ可能なインデントとフォーマットオプションでJSONを美しく出力します。',
  'json-utility.minification': 'JSONミニファイ',
  'json-utility.minification-desc': '不要な空白とフォーマットを削除してJSONをミニファイします。',
  'json-utility.analysis': 'JSON分析',
  'json-utility.analysis-desc': 'JSONデータ構造とコンテンツの詳細な統計情報を取得します。',
  'json-utility.what-is-json': 'JSONとは？',
  'json-utility.json-explanation':
    'JSON（JavaScript Object Notation）は、人間にとって読み書きが簡単で、機械にとって解析と生成が簡単な軽量のテキストベースのデータ交換フォーマットです。JavaScriptプログラミング言語のサブセットに基づいており、Webアプリケーションでのデータ送信によく使用されます。',
  'json-utility.json-benefits':
    'JSONは言語に依存せず、事実上あらゆるプログラミング言語で使用できます。データ構造とオブジェクトを表現・保存するためのシンプルなテキストベースの方法を提供し、API、設定ファイル、システム間のデータ交換に理想的です。',
  'json-utility.json-usage':
    'JSONはWeb開発で広く使用されており、APIレスポンス、設定ファイル、データストレージ、クライアントとサーバーアプリケーション間の通信に使用されます。現代のAPIの95%以上がデータ転送にJSONを使用しています。',
  'json-utility.json-example': 'JSON例',
  'json-utility.comprehensive-features': '包括的なJSONツール',
  'json-utility.formatting-tools': 'フォーマットツール',
  'json-utility.pretty-print': 'プリティプリントと美化',
  'json-utility.indentation-control': 'カスタムインデント（1-8スペース）',
  'json-utility.key-sorting': 'アルファベット順キーソート',
  'json-utility.validation-tools': 'バリデーションツール',
  'json-utility.syntax-validation': 'リアルタイム構文バリデーション',
  'json-utility.error-detection': '詳細なエラー検出',
  'json-utility.line-highlighting': 'エラー行ハイライト',
  'json-utility.auto-fix': '自動エラー修正',
  'json-utility.analysis-tools': '分析ツール',
  'json-utility.structure-analysis': '構造分析',
  'json-utility.size-statistics': 'サイズとパフォーマンス統計',
  'json-utility.tree-view': 'インタラクティブツリービュー',
  'json-utility.data-types': 'データ型分析',
  'json-utility.faq-title': 'よくある質問',
  'json-utility.faq-1-question': 'なぜJSONフォーマッターを使用するのですか？',
  'json-utility.faq-1-answer':
    'JSONフォーマッターは、JSONデータを瞬時に検証、フォーマット、美化するのに役立ちます。エラー検出、構文ハイライトを提供し、JSONデータをより読みやすくします。APIのデバッグ、データの検証、適切なJSON構造の確保に不可欠です。',
  'json-utility.faq-2-question': 'JSONファイルをフォーマットするにはどうすればよいですか？',
  'json-utility.faq-2-answer':
    'JSONデータを入力フィールドに貼り付けて、「フォーマット/美化」をクリックするだけで、ツールが適切なインデントと構造で自動的にフォーマットします。アップロードボタンを使用してJSONファイルを直接アップロードすることもできます。',
  'json-utility.faq-3-question': '私のJSONデータは安全ですか？',
  'json-utility.faq-3-answer':
    'はい、すべての処理はブラウザでローカルに実行されます。JSONデータがサーバーに送信されることはなく、完全なプライバシーとセキュリティが保証されます。ツールは完全にクライアント側で動作し、最大限のデータ保護を提供します。',
  'json-utility.faq-4-question': 'JSONにエラーがある場合はどうなりますか？',
  'json-utility.faq-4-answer':
    'JSONバリデーターが構文エラーを詳細なエラーメッセージと行番号でハイライトします。ツールは、欠落したカンマ、引用符、括弧などの一般的な問題の修正を提案することがよくあります。',
  'json-utility.faq-5-question': 'このツールをオフラインで使用できますか？',
  'json-utility.faq-5-answer':
    'はい、ページが読み込まれた後、JSONフォーマッターをオフラインで使用できます。すべての処理はブラウザでローカルに実行されるため、初期ページ読み込み後にインターネット接続は不要です。',

  // JSON Formatter FAQ (for FAQ component)
  'json-formatter.faq-title': 'よくある質問',
  'json-formatter.faq-subtitle': 'JSONフォーマットについて知っておくべきすべて',
  'json-formatter.tool-name': 'JSONフォーマッター',
  'json-formatter.faq1-question': 'なぜJSONフォーマッターを使用するのですか？',
  'json-formatter.faq1-answer':
    'JSONフォーマッターは、JSONデータを瞬時に検証、フォーマット、美化するのに役立ちます。エラー検出、構文ハイライトを提供し、JSONデータをより読みやすくします。APIのデバッグ、データの検証、正しいJSON構造の確保に不可欠です。',
  'json-formatter.faq2-question': 'JSONファイルをフォーマットするにはどうすればよいですか？',
  'json-formatter.faq2-answer':
    'JSONデータを入力フィールドに貼り付けて、「フォーマット/美化」をクリックするだけで、ツールが適切なインデントと構造で自動的にフォーマットします。アップロードボタンを使用してJSONファイルを直接アップロードすることもできます。',
  'json-formatter.faq3-question': '私のJSONデータは安全ですか？',
  'json-formatter.faq3-answer':
    'はい、すべての処理はブラウザでローカルに行われます。JSONデータがサーバーに送信されることはなく、完全なプライバシーとセキュリティが保証されます。ツールは完全にクライアント側で動作し、データの最大限の保護を提供します。',
  'json-formatter.faq4-question': 'JSONにエラーがある場合はどうなりますか？',
  'json-formatter.faq4-answer':
    'JSONバリデーターは、詳細なエラーメッセージと行番号で構文エラーをハイライトします。ツールは、欠落したカンマ、引用符、括弧などの一般的な問題の修正を提案することがよくあります。',
  'json-formatter.faq5-question': 'このツールをオフラインで使用できますか？',
  'json-formatter.faq5-answer':
    'はい、ページが読み込まれたら、JSONフォーマッターをオフラインで使用できます。すべての処理はブラウザでローカルに行われるため、初期ページ読み込み後はインターネット接続は不要です。',
  'json-utility.use-cases-title': '一般的な使用例',
  'json-utility.developer-use-cases': '開発者向け',
  'json-utility.api-development': 'API開発とテスト',
  'json-utility.debugging': 'JSONレスポンスのデバッグ',
  'json-utility.configuration': '設定ファイル管理',
  'json-utility.data-exchange': 'データ交換と統合',
  'json-utility.business-use-cases': 'ビジネス向け',
  'json-utility.data-analysis': 'データ分析とレポート',
  'json-utility.integration': 'システム統合',
  'json-utility.reporting': 'ビジネスインテリジェンス',
  'json-utility.automation': 'プロセス自動化',
  'json-utility.benefits-title': 'なぜ私たちのJSONフォーマッターを選ぶのですか？',
  'json-utility.fast-processing': '超高速',
  'json-utility.fast-processing-desc':
    '最適化されたアルゴリズムとリアルタイム処理機能により、大きなJSONファイルを瞬時に処理します。',
  'json-utility.secure-processing': '100%安全',
  'json-utility.secure-processing-desc':
    'すべての処理はブラウザでローカルに実行されます。データはデバイスから離れることはなく、完全なプライバシーを保証します。',
  'json-utility.user-friendly': 'ユーザーフレンドリー',
  'json-utility.user-friendly-desc':
    '高度な機能を備えた直感的なインターフェース。登録不要、あらゆるデバイスとブラウザで動作します。',
  'json-parser.title': 'JSON パーサー',
  'json-parser.subtitle':
    'JSONデータ構造を瞬時に解析、分析、理解します。JSONデータの詳細な統計と洞察を取得します。',
  'json-parser.input': 'JSON 入力',
  'json-parser.output': 'JSON 出力',
  'json-parser.load-sample': 'サンプルを読み込み',
  'json-parser.clear-all': 'すべてクリア',
  'json-parser.parse': 'JSON を解析',
  'json-parser.copy': 'コピー',
  'json-parser.download': 'ダウンロード',
  'json-parser.parsed-view': '解析済みビュー',
  'json-parser.minified-view': '圧縮ビュー',
  'json-parser.stats-view': '統計ビュー',
  'json-parser.keyboard-shortcuts': 'キーボードショートカット',
  'json-parser.what-is-parser': 'JSON パーサーとは？',
  'json-parser.parser-explanation':
    'JSONパーサーは、JSONデータを分析・処理して意味のある情報を抽出し、構造を検証し、データに関する洞察を提供するツールです。',
  'json-parser.parser-benefits':
    'JSONパーサーは、開発者がデータ構造を理解し、問題をデバッグし、データパターンを分析し、データ処理ワークフローを最適化するのに役立ちます。',
  'json-parser.parser-usage':
    'JSONパーサーを使用してAPIレスポンスを分析し、データの問題をデバッグし、複雑なデータ構造を理解し、データ処理ワークフローを最適化します。',
  'json-parser.comprehensive-features': '包括的な JSON 分析機能',
  'json-parser.parsing-tools': '解析ツール',
  'json-parser.syntax-validation': '構文検証',
  'json-parser.error-detection': 'エラー検出',
  'json-parser.structure-analysis': '構造分析',
  'json-parser.data-types': 'データ型分析',
  'json-parser.analysis-tools': '分析ツール',
  'json-parser.size-statistics': 'サイズ統計',
  'json-parser.depth-analysis': '深度分析',
  'json-parser.key-analysis': 'キー分析',
  'json-parser.value-analysis': '値分析',
  'json-parser.utility-tools': 'ユーティリティツール',
  'json-parser.copy-output': '出力をコピー',
  'json-parser.download-result': '結果をダウンロード',
  'json-parser.user-friendly': 'ユーザーフレンドリーなインターフェース',
  'json-parser.faq-title': 'よくある質問',
  'json-parser.faq-1-question': 'JSON パーサーとフォーマッターの違いは何ですか？',
  'json-parser.faq-1-answer':
    'JSONフォーマッターはJSONデータの美化とフォーマットに焦点を当てますが、JSONパーサーは構造を分析し、構文を検証し、データに関する詳細な洞察を提供します。',
  'json-parser.faq-2-question': '大きな JSON ファイルを解析できますか？',
  'json-parser.faq-2-answer':
    'はい、当社のJSONパーサーは大きなJSONファイルを効率的に処理できます。データ構造に関するリアルタイム分析と詳細な統計を提供します。',
  'json-parser.faq-3-question': 'パーサーはどのような分析を提供しますか？',
  'json-parser.faq-3-answer':
    'パーサーは、データ型、構造の深さ、キー統計、値の分布、JSONデータに関する詳細な洞察を含む包括的な分析を提供します。',
  'json-parser.faq-4-question': 'JSON パーサーは安全ですか？',
  'json-parser.faq-4-answer':
    'はい、すべての処理はブラウザのクライアント側で行われます。データがデバイスを離れることはなく、完全なプライバシーとセキュリティを保証します。',
  'json-parser.faq-5-question': 'API 開発にパーサーを使用できますか？',
  'json-parser.faq-5-answer':
    'Absolutely! The JSON parser is perfect for API development, debugging responses, analyzing data structures, and understanding complex JSON payloads.',
  // JSON Parser FAQ (for FAQ component)
  'json-parser.faq-subtitle': 'JSON解析について知っておくべきすべて',
  'json-parser.tool-name': 'JSONパーサー',
  'json-parser.faq1-question': 'JSONパーサーとフォーマッターの違いは何ですか？',
  'json-parser.faq1-answer':
    'JSONフォーマッターはJSONデータの美化とフォーマットに焦点を当てますが、JSONパーサーは構造を分析し、構文を検証し、データに関する詳細な洞察を提供します。',
  'json-parser.faq2-question': '大きなJSONファイルを解析できますか？',
  'json-parser.faq2-answer':
    'はい、当社のJSONパーサーは大きなJSONファイルを効率的に処理できます。リアルタイム分析とデータ構造に関する詳細な統計を提供します。',
  'json-parser.faq3-question': 'パーサーはどのような分析を提供しますか？',
  'json-parser.faq3-answer':
    'パーサーは、データ型、構造の深さ、キー統計、値の分布、JSONデータに関する詳細な洞察を含む包括的な分析を提供します。',
  'json-parser.faq4-question': 'JSONパーサーは安全ですか？',
  'json-parser.faq4-answer':
    'はい、すべての処理はブラウザのクライアント側で実行されます。データがデバイスを離れることはなく、完全なプライバシーとセキュリティが保証されます。',
  'json-parser.faq5-question': 'API開発にパーサーを使用できますか？',
  'json-parser.faq5-answer':
    'もちろんです！JSONパーサーはAPI開発、レスポンスのデバッグ、データ構造の分析、複雑なJSONペイロードの理解に最適です。',
  'json-parser.use-cases-title': '使用例',
  'json-parser.developer-use-cases': '開発者使用例',
  'json-parser.api-development': 'API 開発とテスト',
  'json-parser.debugging': 'データデバッグと分析',
  'json-parser.data-analysis': 'データ構造分析',
  'json-parser.testing': 'JSON テストと検証',
  'json-parser.business-use-cases': 'ビジネス使用例',
  'json-parser.data-processing': 'データ処理と ETL',
  'json-parser.reporting': 'データレポートと分析',
  'json-parser.integration': 'システム統合',
  'json-parser.automation': 'データ自動化',
  'json-parser.benefits-title': 'なぜ当社の JSON パーサーを選ぶのか？',
  'json-parser.fast-processing': '超高速',
  'json-parser.fast-processing-desc':
    'Process large JSON files instantly with our optimized parsing engine.',
  'json-parser.secure-processing': '100% 安全',
  'json-parser.secure-processing-desc':
    'All processing happens locally in your browser - your data never leaves your device.',
  'json-parser.user-friendly-desc':
    'Intuitive interface designed for both beginners and advanced users.',
  'case-converter.title': '大文字小文字コンバーター',
  'case-converter.description':
    '強力なケース変換ツールでテキストを変換します。様々なケース形式から選択し、SEOフレンドリーなスラッグを作成し、あらゆる目的でテキストをフォーマットします。',
  'case-converter.input-label': '入力テキスト',
  'case-converter.output-label': '変換されたテキスト',
  'case-converter.conversion-type': '変換タイプ',
  'case-converter.uppercase': '大文字',
  'case-converter.uppercase-desc': 'テキスト全体を大文字に変換',
  'case-converter.lowercase': '小文字',
  'case-converter.lowercase-desc': 'テキスト全体を小文字に変換',
  'case-converter.titlecase': 'タイトルケース',
  'case-converter.titlecase-desc': '各単語の最初の文字を大文字に変換',
  'case-converter.sentencecase': 'センテンスケース',
  'case-converter.sentencecase-desc': '文の最初の文字を大文字に変換',
  'case-converter.camelcase': 'キャメルケース',
  'case-converter.camelcase-desc': 'キャメルケースに変換（最初の単語は小文字）',
  'case-converter.pascalcase': 'パスカルケース',
  'case-converter.pascalcase-desc': 'パスカルケースに変換（すべての単語を大文字で開始）',
  'case-converter.snakecase': 'スネークケース',
  'case-converter.snakecase-desc': 'アンダースコアでスネークケースに変換',
  'case-converter.kebabcase': 'ケバブケース',
  'case-converter.kebabcase-desc': 'ハイフンでケバブケースに変換',
  'case-converter.dotcase': 'ドットケース',
  'case-converter.dotcase-desc': 'ドットでドットケースに変換',
  'case-converter.pathcase': 'パスケース',
  'case-converter.pathcase-desc': 'スラッシュでパスケースに変換',
  'case-converter.headlinetitlecase': 'ヘッドラインタイトルケース',
  'case-converter.headlinetitlecase-desc': 'ヘッドライン用のタイトルケース（小さな単語を無視）',
  'case-converter.sentencetitlecase': 'センテンスタイトルケース',
  'case-converter.sentencetitlecase-desc': '固有名詞を保持するタイトルケース',
  'case-converter.apatitlecase': 'APAタイトルケース',
  'case-converter.apatitlecase-desc': 'APAスタイルのタイトルケース（4文字以上の単語）',
  'case-converter.humanize': 'テキストを人間らしく',
  'case-converter.humanize-desc': 'コードのようなテキストを読みやすい形式に変換',
  'case-converter.slugify': 'スラッグ作成',
  'case-converter.slugify-desc': 'SEOフレンドリーなURLスラッグを作成',
  'case-converter.lowercasefirst': '最初の文字を小文字',
  'case-converter.lowercasefirst-desc': '最初の文字を小文字にする',
  'case-converter.acronymuppercase': '頭文字語大文字',
  'case-converter.acronymuppercase-desc': '一般的な頭文字語を大文字に変換',
  'case-converter.invertcase': '大文字小文字を反転',
  'case-converter.invertcase-desc': 'すべての文字の大文字小文字を反転',
  'case-converter.alternatingcase': '交互大文字小文字',
  'case-converter.alternatingcase-desc': '大文字と小文字を交互に切り替え',
  'case-converter.alternatingcaselower': '交互大文字小文字（小文字開始）',
  'case-converter.alternatingcaselower-desc': '小文字から開始して交互に切り替え',
  'case-converter.features.instant-conversion': '即座の変換',
  'case-converter.features.instant-conversion-desc': '入力しながらリアルタイム変換で結果を確認',
  'case-converter.features.privacy-first': 'プライバシー第一',
  'case-converter.features.privacy-first-desc':
    'すべての処理はお使いのブラウザ内で行われ、サーバーへデータは送信されません',
  'case-converter.features.completely-free': '完全無料',
  'case-converter.features.completely-free-desc': '登録不要、制限なし、隠れたコストなし',
  'action.clear': 'クリア',
  'action.copy': 'コピー',
  'action.input-placeholder': 'ここにテキストを入力してください...',
  'action.output-placeholder': '結果がここに表示されます...',
  'home.hero.title': '無料テキストコンバーター ',
  'home.hero.subtitle': 'オンライン',
  'home.hero.description':
    '強力な変換ツールでテキストを変換：大文字小文字の変更、フォーマット、エンコーディング、SEOフレンドリーなジェネレーター。すべてのツールは無料で、ブラウザで即座に動作します。',
  'home.features.title': '強力なテキスト変換ツール',
  'home.cta.title': 'テキストを変換する準備はできましたか？',
  'home.cta.description':
    'テキスト変換のニーズにText Converterを信頼する何千ものユーザーに参加してください。',
  'home.button.learn-more': '詳細を見る',
  'feature.case-conversion.title': '大文字小文字変換',
  'feature.case-conversion.description': 'テキストを大文字、小文字、タイトルケースなどに変換',
  'feature.text-formatting.title': 'テキストフォーマット',
  'feature.text-formatting.description': '適切な間隔、改行、構造でテキストをフォーマット',
  'feature.encoding-tools.title': 'エンコーディングツール',
  'feature.encoding-tools.description': 'さまざまな形式でテキストをエンコード・デコードします。',
  'feature.seo-tools.title': 'SEOツール',
  'feature.seo-tools.description': 'SEOフレンドリーなスラッグと説明を生成します。',
  'footer.title': 'テキストコンバーター',
  'footer.description': '無料のオンラインテキスト変換・フォーマットツール。',
  'footer.copyright': '© 2025 テキストコンバーター。全著作権所有。',
  'footer.follow-us': 'Follow Us',
  'footer.social-description': 'Stay connected for updates, tips, and new features',
  'language.current': '日本語',
  'language.select': '言語を選択',
  'language.english': 'English',
  'language.spanish': 'Español',
  'language.french': 'Français',
  'language.chinese': '中文',
  'language.hindi': 'हिन्दी',
  'language.arabic': 'العربية',
  'language.bengali': 'বাংলা',
  'language.portuguese': 'Português',
  'language.russian': 'Русский',
  'text-statistics.characters': '文字',
  'text-statistics.no-spaces': 'スペースなし',
  'text-statistics.words': '単語',
  'text-statistics.sentences': '文',
  'text-statistics.avg-word': '平均単語',
  'text-statistics.avg-sentence': '平均文',
  'text-statistics.paragraphs': '段落',
  'text-statistics.lines': '行',
  'text-statistics.min-read': '分で読む',
  'text-statistics.min-speak': '分で話す',
  'common.input-text': '入力テキスト',
  'common.output-text': '出力テキスト',
  'common.copy': 'コピー',
  'common.clear': 'クリア',
  'common.convert': '変換',
  'common.format': 'フォーマット',
  'common.analyze': '分析',
  'common.generate': '生成',
  'common.loading': '読み込み中...',
  'common.error': 'エラー',
  'common.success': '成功',
  'common.select-option': 'オプションを選択...',
  'text-generator.title': 'テキストジェネレーター',
  'text-generator.description':
    'Lorem Ipsum、ランダムテキスト、UUIDなどを含む様々なタイプのテキストコンテンツを生成',
  'text-generator.utility-type': 'テキスト生成ツール',
  'text-generator.input-label': '入力テキスト',
  'text-generator.output-label': '生成されたテキスト',
  'text-generator.clear-button': 'クリア',
  'text-generator.copy-button': 'コピー',
  'text-generator.input-placeholder': 'ここにテキストを入力してください...',
  'text-generator.output-placeholder': '生成されたテキストがここに表示されます...',
  'text-generator.available-tools': '利用可能なツール',
  'text-generator.type': 'タイプ',
  'text-generator.count': '数',
  'text-generator.words': '単語',
  'text-generator.sentences': '文',
  'text-generator.paragraphs': '段落',
  'text-generator.result': '結果',
  'text-generator.copy': 'コピー',
  'text-generator.lorem-ipsum': 'Lorem Ipsum',
  'text-generator.lorem-ipsum-desc': '標準的なLorem Ipsumプレースホルダーテキストを生成',
  'text-generator.random-text': 'ランダムテキスト',
  'text-generator.uuid-generator': 'UUIDジェネレーター',
  'text-generator.extract-emails': 'メールアドレス抽出',
  'text-generator.extract-urls': 'URL抽出',
  'text-generator.extract-phones': '電話番号抽出',
  'text-generator.mask-emails': 'メールアドレスマスク',
  'text-generator.mask-phones': '電話番号マスク',
  'text-generator.mask-credit-cards': 'クレジットカードマスク',
  'text-generator.feature.lorem-ipsum': 'Lorem Ipsumジェネレーター',
  'text-generator.feature.lorem-ipsum-desc': '標準的なLorem Ipsumプレースホルダーテキストを生成',
  'text-generator.feature.random-text': 'ランダムテキストジェネレーター',
  'text-generator.feature.random-text-desc': 'ランダムなテキストコンテンツを生成',
  'text-generator.feature.uuid-generator': 'UUIDジェネレーター',
  'text-generator.feature.uuid-generator-desc': '一意の識別子を生成',
  'text-generator.feature.data-extractors': 'データ抽出器',
  'text-generator.feature.data-extractors-desc': 'テキストから特定のデータタイプを抽出',
  'text-generator.feature.privacy-maskers': 'プライバシーマスカー',
  'text-generator.feature.privacy-maskers-desc': 'プライバシーを保護するために機密情報をマスク',
  'text-generator.tool-name': 'テキストジェネレーター',
  'text-generator.faq-title': 'よくある質問',
  'text-generator.faq-subtitle': 'テキストジェネレーターに関する一般的な質問',
  'text-generator.faq1-question': 'オンラインでLorem Ipsumテキストを生成するには？',
  'text-generator.faq1-answer':
    'Lorem Ipsumテキストをオンラインで生成するには、無料のテキストジェネレーターツールを使用してください。「Lorem Ipsum」を選択し、長さを指定すると、即座にプレースホルダーテキストが得られます。デザインモックアップ、開発テスト、コンテンツレイアウトに最適です。登録不要です。',
  'text-generator.faq2-question': 'アプリケーションのテスト用にランダムテキストを生成できますか？',
  'text-generator.faq2-answer':
    'はい！当ツールは、アプリケーションやコンテンツレイアウトのテスト用にランダムテキスト、文、段落を生成します。開発者、デザイナー、コンテンツクリエイターに最適です。フォーム、データベース、ユーザーインターフェース用のリアルなテストデータを生成します。',
  'text-generator.faq3-question': 'アプリケーション用のUUIDを生成するには？',
  'text-generator.faq3-answer':
    'テキストジェネレーターを使用して、データベースレコードやAPIエンドポイント用に様々な形式（UUID v1、v4）の一意の識別子を作成します。分散システム、データベース、一意ID生成を扱う開発者に不可欠です。',
  'text-generator.faq4-question': 'テキストからメールアドレスとURLを抽出するには？',
  'text-generator.faq4-answer':
    '当ツールは、任意のテキストコンテンツからメールアドレス、URL、電話番号を自動的に抽出します。データ分析、連絡先抽出、コンテンツ処理に最適です。包括的なテキスト処理のためにテキストアナライザーと組み合わせて使用してください。',
  'text-generator.faq5-question': 'テキスト内の機密情報をマスクするには？',
  'text-generator.faq5-answer':
    'データマスキング機能を使用して、メールアドレス、電話番号、クレジットカード番号などの機密情報を隠します。テキスト構造を維持しながらプライバシーを保護するのに最適です。データ匿名化とプライバシーコンプライアンスに不可欠です。',
  'text-generator.faq6-question': '開発用のテストデータを生成できますか？',
  'text-generator.faq6-answer':
    'はい！テキストジェネレーターは、アプリケーションテスト用に名前、アドレス、その他の情報を含むリアルなテストデータを作成します。開発者、QAチーム、データベース管理者に最適です。開発環境とテスト環境用の一貫したテストデータを生成します。',
  'text-analyzer.title': 'テキストアナライザー',
  'text-analyzer.description': '検索/置換、頻度分析などを含むテキストの分析と処理',
  'text-analyzer.utility-type': 'テキスト分析ツール',
  'text-analyzer.input-label': '入力テキスト',
  'text-analyzer.output-label': '分析結果',
  'text-analyzer.input-placeholder': 'ここにテキストを入力してください...',
  'text-analyzer.output-placeholder': '結果がここに表示されます...',
  'text-analyzer.clear-button': 'クリア',
  'text-analyzer.copy-button': 'コピー',
  'text-analyzer.features-title': '機能',
  'text-analyzer.find-placeholder': 'テキストを検索...',
  'text-analyzer.replace-placeholder': '置換...',
  'text-analyzer.find-text': 'テキストを検索',
  'text-analyzer.replace-with': '置換',
  'text-analyzer.use-regex': '正規表現を使用',
  'text-analyzer.case-sensitive': '大文字小文字を区別',
  'text-analyzer.global-replace': 'グローバル置換',
  'text-analyzer.multiline': 'マルチラインモード',
  'text-analyzer.feature.find-replace': '検索と置換',
  'text-analyzer.feature.find-replace-desc': 'テキスト内のコンテンツを検索して置換',
  'text-analyzer.feature.find-matches': 'マッチを検索',
  'text-analyzer.feature.find-matches-desc': 'テキスト内の一致するパターンを検索',
  'text-analyzer.feature.remove-punctuation': '句読点を削除',
  'text-analyzer.feature.remove-punctuation-desc': 'テキストから句読点を削除',
  'text-analyzer.feature.remove-numbers': '数字を削除',
  'text-analyzer.feature.remove-numbers-desc': 'テキストから数字を削除',
  'text-analyzer.feature.keep-numbers-only': '数字のみ保持',
  'text-analyzer.feature.keep-numbers-only-desc': 'テキスト内の数字のみを保持',
  'text-analyzer.feature.remove-duplicate-words': '重複単語を削除',
  'text-analyzer.feature.remove-duplicate-words-desc': 'テキストから重複する単語を削除',
  'text-analyzer.feature.word-frequency': '単語頻度',
  'text-analyzer.feature.word-frequency-desc': 'テキスト内の単語の頻度を分析',
  'text-analyzer.feature.char-frequency': '文字頻度',
  'text-analyzer.feature.char-frequency-desc': 'テキスト内の文字の頻度を分析',
  'encode-decode.title': 'エンコード/デコード',
  'encode-decode.description': 'URL、Base64、HTMLなど様々な形式でテキストをエンコード・デコード',
  'encode-decode.utility-type': 'エンコード/デコードツール',
  'encode-decode.input-label': '入力テキスト',
  'encode-decode.output-label': 'エンコード/デコード結果',
  'encode-decode.clear-button': 'クリア',
  'encode-decode.copy-button': 'コピー',
  'encode-decode.input-placeholder': 'ここにテキストを入力してください...',
  'encode-decode.output-placeholder': 'エンコード/デコードされた結果がここに表示されます...',
  'encode-decode.features-title': '機能',
  'encode-decode.examples-title': '例',
  'encode-decode.quick-tips': 'クイックヒント',
  'encode-decode.tip-url': 'URLエンコーディングは、特殊文字をURLで安全に送信するために使用されます',
  'encode-decode.tip-base64': 'Base64 encoding is used to transmit binary data in text format',
  'encode-decode.tip-html': 'HTMLエスケープは、HTMLで特殊文字を表示するために使用されます',
  'encode-decode.tip-unicode':
    'Unicode normalization is used to handle different character encodings',
  'encode-decode.url-encode': 'URLエンコード',
  'encode-decode.url-encode-desc': 'テキストをURLセーフな形式にエンコード',
  'encode-decode.url-decode': 'URLデコード',
  'encode-decode.base64-encode': 'Base64エンコード',
  'encode-decode.base64-decode': 'Base64デコード',
  'encode-decode.html-escape': 'HTMLエスケープ',
  'encode-decode.html-unescape': 'HTMLアンエスケープ',
  'encode-decode.json-escape': 'JSONエスケープ',
  'encode-decode.json-unescape': 'JSONアンエスケープ',
  'encode-decode.html-to-text': 'HTMLからテキスト',
  'encode-decode.ascii-transliterate': 'ASCII音訳',
  'encode-decode.smart-quotes': 'スマートクォート',
  'encode-decode.unicode-nfc': 'Unicode NFC',
  'encode-decode.unicode-nfd': 'Unicode NFD',
  'encode-decode.feature.url-encode-decode': 'URLエンコード/デコード',
  'encode-decode.feature.url-encode-decode-desc': 'URLセーフな形式でエンコード・デコード',
  'encode-decode.feature.base64-encode-decode': 'Base64エンコード/デコード',
  'encode-decode.feature.base64-encode-decode-desc': 'Base64形式でエンコード・デコード',
  'encode-decode.feature.html-escape-unescape': 'HTMLエスケープ/アンエスケープ',
  'encode-decode.feature.html-escape-unescape-desc': 'HTML文字をエスケープ・アンエスケープ',
  'encode-decode.feature.json-escape-unescape': 'JSONエスケープ/アンエスケープ',
  'encode-decode.feature.json-escape-unescape-desc': 'JSON文字をエスケープ・アンエスケープ',
  'encode-decode.feature.html-to-text': 'HTMLからテキスト',
  'encode-decode.feature.html-to-text-desc': 'HTMLをプレーンテキストに変換',
  'encode-decode.feature.ascii-transliterate': 'ASCII音訳',
  'encode-decode.feature.ascii-transliterate-desc': 'Unicode文字をASCIIに変換',
  'encode-decode.feature.smart-quotes': 'スマートクォート',
  'encode-decode.feature.smart-quotes-desc': 'スマートクォート文字を変換',
  'encode-decode.feature.unicode-nfc': 'Unicode NFC',
  'encode-decode.feature.unicode-nfc-desc': 'Unicode正規化形式C',
  'encode-decode.feature.unicode-nfd': 'Unicode NFD',
  'encode-decode.feature.unicode-nfd-desc': 'Unicode正規化形式D',
  'encode-decode.examples-web-dev': 'Web開発例',
  'encode-decode.examples-web-dev-1': 'クエリパラメータ用のURLエンコーディング',
  'encode-decode.examples-web-dev-2': 'Data URI用のBase64エンコーディング',
  'encode-decode.examples-web-dev-3': 'XSS保護用のHTMLエスケープ',
  'encode-decode.examples-web-dev-4': 'APIデータ用のJSONエスケープ',
  'encode-decode.examples-data-processing': 'データ処理例',
  'encode-decode.examples-data-processing-1': 'テキスト比較用のUnicode正規化',
  'encode-decode.examples-data-processing-2': '検索用のASCII音訳',
  'encode-decode.examples-data-processing-3': '文書処理用のスマートクォート',
  'encode-decode.examples-data-processing-4': 'コンテンツ抽出用のHTMLからテキスト',
  'text-formatter.title': 'テキストフォーマッター',
  'text-formatter.description': '空白のトリミング、インデント、行末を含むテキストのフォーマット',
  'text-formatter.utility-type': 'テキストフォーマットツール',
  'text-formatter.input-label': '入力テキスト',
  'text-formatter.output-label': 'フォーマットされた結果',
  'text-formatter.clear-button': 'クリア',
  'text-formatter.copy-button': 'コピー',
  'text-formatter.input-placeholder': 'ここにテキストを入力してください...',
  'text-formatter.output-placeholder': 'フォーマットされた結果がここに表示されます...',
  'text-formatter.formatting-type': 'フォーマットタイプ',
  'text-formatter.tab-size': 'タブサイズ',
  'text-formatter.tab-size-description': 'タブのスペース数を設定',
  'text-formatter.features-title': '機能',
  'text-formatter.trim': 'スペースを削除',
  'text-formatter.trim-desc': 'テキストの先頭と末尾からスペースを削除',
  'text-formatter.collapse': 'スペースを統合',
  'text-formatter.collapse-desc': '連続する複数のスペースを単一のスペースに置換',
  'text-formatter.remove-line-breaks': '改行を削除',
  'text-formatter.remove-line-breaks-desc': 'すべての改行を削除し、スペースを正規化',
  'text-formatter.normalize-line-endings': '行末を正規化',
  'text-formatter.normalize-line-endings-desc': '行末をUnix形式（LF）に変換',
  'text-formatter.normalize-line-endings-crlf': 'CRLFに正規化',
  'text-formatter.normalize-line-endings-crlf-desc':
    'Convert line endings to Windows format (CRLF)',
  'text-formatter.indent': 'インデント',
  'text-formatter.indent-desc': 'すべての行にインデントを追加',
  'text-formatter.unindent': 'インデントを削除',
  'text-formatter.unindent-desc': 'すべての行から共通のインデントを削除',
  'text-formatter.tabs-to-spaces': 'タブをスペースに',
  'text-formatter.tabs-to-spaces-desc': 'タブ文字をスペースに変換',
  'text-formatter.spaces-to-tabs': 'スペースをタブに',
  'text-formatter.spaces-to-tabs-desc': 'スペースをタブ文字に変換',
  'text-formatter.feature.trim-whitespace': '空白を削除',
  'text-formatter.feature.trim-whitespace-desc': 'テキストの先頭と末尾から空白を削除',
  'text-formatter.feature.collapse-spaces': 'スペースを統合',
  'text-formatter.feature.collapse-spaces-desc':
    'Collapse multiple consecutive spaces to single space',
  'text-formatter.feature.remove-line-breaks': '改行を削除',
  'text-formatter.feature.remove-line-breaks-desc': 'テキストからすべての改行を削除',
  'text-formatter.feature.normalize-line-endings': '行末を正規化',
  'text-formatter.feature.normalize-line-endings-desc':
    'Normalize line endings to consistent format',
  'text-formatter.feature.indent-lines': '行をインデント',
  'text-formatter.feature.indent-lines-desc': 'テキスト行にインデントを追加',
  'text-formatter.feature.unindent-lines': '行のインデントを削除',
  'text-formatter.feature.unindent-lines-desc': 'テキスト行からインデントを削除',
  'text-formatter.feature.tabs-to-spaces': 'タブをスペースに',
  'text-formatter.feature.tabs-to-spaces-desc': 'タブをスペースに変換',
  'text-formatter.feature.spaces-to-tabs': 'スペースをタブに',
  'text-formatter.feature.spaces-to-tabs-desc': 'スペースをタブに変換',
  'text-formatter.tool-name': 'テキストフォーマッター',
  'text-formatter.faq-title': 'よくある質問',
  'text-formatter.faq-subtitle': 'テキストフォーマッターに関する一般的な質問',
  'text-analyzer.tool-name': 'テキストアナライザー',
  'text-analyzer.faq-title': 'よくある質問',
  'text-analyzer.faq-subtitle': 'テキストアナライザーに関する一般的な質問',
  'text-analyzer.faq1-question': 'テキスト分析ツールの精度はどの程度ですか？',
  'text-analyzer.faq1-answer':
    '当社のテキストアナライザーは、単語数、文字数、文数、高度な統計を含む高精度の分析を提供します。コンテンツクリエイター、研究者、データアナリストに最適です。詳細なメトリクスと頻度分析でテキストの即座の洞察を得ることができます。',
  'text-analyzer.faq2-question': '正規表現を使用してテキストの検索と置換はできますか？',
  'text-analyzer.faq2-answer':
    'はい！当社のテキストアナライザーは、高度なテキスト操作のための強力な正規表現検索・置換機能をサポートしています。複雑なパターンを使用して、特定のテキストパターンを検索、置換、抽出できます。データ処理、コンテンツ編集、テキスト変換に不可欠です。追加のフォーマットには<a href="/text-formatter" title="テキストフォーマッター">テキストフォーマッター</a>をお試しください。',
  'text-analyzer.faq3-question': 'テキスト内の単語頻度をどのように分析しますか？',
  'text-analyzer.faq3-answer':
    '当社のツールは自動的に単語頻度を分析し、最も一般的な単語をカウントと共に表示します。SEO分析、コンテンツ最適化、テキストパターンの理解に最適です。キーワード密度、コンテンツ構造、執筆スタイルの洞察を得ることができます。',
  'text-analyzer.faq4-question': 'テキストから句読点や数字をどのように削除しますか？',
  'text-analyzer.faq4-answer':
    '当社のテキストアナライザーを使用して、テキストから句読点、数字、またはその両方を即座に削除できます。データクリーニング、テキスト前処理、コンテンツ分析に最適です。さらなる処理や分析のためにテキストを準備するのに不可欠です。',
  'text-analyzer.faq5-question': 'アナライザーはどのようなテキスト統計を提供しますか？',
  'text-analyzer.faq5-answer':
    '単語数、文字数、文数、段落数、読書時間、キーワード密度分析を含む包括的な統計を提供します。コンテンツ構造、可読性、構成の詳細な洞察を得ることができます。コンテンツ最適化と分析に最適です。',
  'text-analyzer.faq6-question': 'テキストから特定のパターンをどのように抽出しますか？',
  'text-analyzer.faq6-answer':
    '当社の正規表現機能を使用して、テキストからメールアドレス、URL、電話番号、または任意のカスタムパターンを抽出できます。データ抽出、コンテンツ分析、情報収集に最適です。データ処理ワークフローのために<a href="/text-generator" title="テキストジェネレーター">テキストジェネレーター</a>と組み合わせて使用してください。',
  'case-converter.tool-name': 'ケースコンバーター',
  'line-tools.tool-name': 'リストツール',
  'text-formatter.faq1-question':
    'オンラインでテキストから余分なスペースを削除するにはどうすればよいですか？',
  'text-formatter.faq1-answer':
    'オンラインでテキストから余分なスペースを削除するには、無料の<a href="/text-formatter" title="テキストフォーマッター">テキストフォーマッター</a>ツールを使用してください。「Collapse Spaces」を選択して、複数のスペースを削除し、単一のスペースに置き換えます。コピーしたテキスト、ドキュメント、コードのクリーンアップに最適です。ブラウザで即座に動作します。',
  'text-formatter.faq2-question': 'テキスト正規化とは何ですか？なぜ必要ですか？',
  'text-formatter.faq2-answer':
    'テキスト正規化は、余分な空白を削除し、行末を正規化し、フォーマットの不整合をクリーンアップすることで、テキストフォーマットを標準化します。データ処理、コードフォーマット、ドキュメント準備に不可欠です。テキストアナライザーが結果の分析に役立ちます。',
  'text-formatter.faq3-question': '異なるプログラミング言語用にテキストをフォーマットできますか？',
  'text-formatter.faq3-answer':
    'はい！テキストフォーマッターには、異なるプログラミング言語のオプションが含まれており、様々なインデントスタイルを処理します。タブとスペースの間で変換し、行末を正規化し、Python、JavaScript、Javaなどのコードをフォーマットします。変数命名にはケースコンバーターをお試しください。',
  'text-formatter.faq4-question': 'テキストの一貫しない改行を修正するにはどうすればよいですか？',
  'text-formatter.faq4-answer':
    'テキストフォーマッターを使用して、改行を即座に正規化します。Windows（CRLF）、Unix（LF）、またはMac（CR）の改行スタイルを選択するか、すべての改行を削除します。クロスプラットフォーム互換性とコードフォーマットに不可欠です。',
  'text-formatter.faq5-question': 'プログラミングにおけるタブとスペースの違いは何ですか？',
  'text-formatter.faq5-answer':
    'タブは複数のスペースを表す単一の文字であり、スペースは個別の文字です。ツールは一貫したインデントを維持しながら、タブとスペースの間で変換します。プログラミングプロジェクトでのコード可読性とチーム協力に重要です。',
  'text-formatter.faq6-question': 'テキストから空白をトリムするにはどうすればよいですか？',
  'text-formatter.faq6-answer':
    'テキストフォーマッターは、先頭と末尾の空白を即座に削除します。ウェブサイト、ドキュメント、スプレッドシートからコピーしたテキストのクリーンアップに最適です。行ごとのデータ処理にはリストツールもお試しください。',
  'text-formatter.faq7-question':
    '可読性を向上させるためにテキストをフォーマットするにはどうすればよいですか？',
  'text-formatter.faq7-answer':
    'テキストフォーマッターは、適切なスペーシングを追加し、句読点を正規化し、デバイス間で最適な表示のためにテキストをフォーマットすることで可読性を向上させます。コンテンツ作成、ドキュメント準備、データプレゼンテーションに不可欠です。',
  'line-tools.title': 'ラインツール',
  'line-tools.description': 'ソート、重複削除、番号付けなどを含むテキスト行を処理',
  'line-tools.utility-type': '行処理ツール',
  'line-tools.input-label': '入力テキスト',
  'line-tools.output-label': '処理された結果',
  'line-tools.clear-button': 'クリア',
  'line-tools.copy-button': 'コピー',
  'line-tools.input-placeholder': 'ここにテキストを入力してください...',
  'line-tools.output-placeholder': '処理された結果がここに表示されます...',
  'line-tools.features-title': '機能',
  'line-tools.sort': 'ソート',
  'line-tools.sort-desc': 'テキスト行をアルファベット順にソート',
  'line-tools.remove-duplicates': '重複を削除',
  'line-tools.remove-empty': '空行を削除',
  'line-tools.number-lines': '行番号を付ける',
  'line-tools.remove-numbers': '数字を削除',
  'line-tools.reverse': '反転',
  'line-tools.shuffle': 'シャッフル',
  'line-tools.join': '結合',
  'line-tools.split': '分割',
  'line-tools.sort-order': 'ソート順',
  'line-tools.ascending': '昇順',
  'line-tools.descending': '降順',
  'line-tools.case-sensitive': '大文字小文字を区別',
  'line-tools.feature.sort-lines': '行をソート',
  'line-tools.feature.sort-lines-desc': 'テキスト行をアルファベット順にソート',
  'line-tools.feature.remove-duplicate-lines': '重複行を削除',
  'line-tools.feature.remove-duplicate-lines-desc': 'テキストから重複する行を削除',
  'line-tools.feature.remove-empty-lines': '空行を削除',
  'line-tools.feature.remove-empty-lines-desc': 'テキストから空行を削除',
  'line-tools.feature.number-lines': '行番号を付ける',
  'line-tools.feature.number-lines-desc': 'テキストに行番号を追加',
  'line-tools.feature.remove-line-numbers': '行番号を削除',
  'line-tools.feature.remove-line-numbers-desc': 'テキストから行番号を削除',
  'line-tools.feature.reverse-lines': '行を反転',
  'line-tools.feature.reverse-lines-desc': 'テキスト行の順序を反転',
  'line-tools.feature.shuffle-lines': '行をシャッフル',
  'line-tools.feature.shuffle-lines-desc': 'テキスト行の順序をランダムにシャッフル',
  'line-tools.feature.join-lines': '行を結合',
  'line-tools.feature.join-lines-desc': '複数の行を1つの行に結合',
  'line-tools.feature.split-text': 'テキストを分割',
  'line-tools.feature.split-text-desc': 'テキストを複数の行に分割',
  'line-tools.faq-title': 'よくある質問',
  'line-tools.faq-subtitle': 'ラインツールに関する一般的な質問',
  'line-tools.faq1-question': 'オンラインで行をアルファベット順にソートするには？',
  'line-tools.faq1-answer':
    'オンラインで行をアルファベット順にソートするには、無料のラインツールをご利用ください。「行をソート」を選択して、テキスト行をアルファベット順（昇順または降順）に並べ替えます。リスト、データ、テキストコンテンツの整理に最適です。ブラウザで即座に動作します。',
  'line-tools.faq2-question': 'テキストから重複行を削除するには？',
  'line-tools.faq2-answer':
    '「重複を削除」機能を使用して、重複行を排除し、元の行の順序を保持します。データクリーニング、リスト処理、コンテンツの重複排除に不可欠です。大規模データセット、テキストファイル、メールリストの処理に最適です。任意のテキストコンテンツで即座に動作します。',
  'line-tools.faq3-question': 'テキストに行番号を付けるには？',
  'line-tools.faq3-answer':
    'ラインツールは、テキスト行に連続番号を自動的に付けることができます。番号付きリストの作成、特定の行の参照、コンテンツの整理に最適です。ドキュメント、データ処理、コンテンツ整理に不可欠です。任意のテキストコンテンツで動作します。',
  'line-tools.faq4-question': '行の順序を逆にするには？',
  'line-tools.faq4-answer':
    '「行を逆転」を使用して、テキスト行の順序を即座に反転させます。逆時系列でのデータ処理、逆リストの作成、データ操作に最適です。データ分析、コンテンツ処理、リスト整理に不可欠です。任意のテキストコンテンツで動作します。',
  'line-tools.faq5-question': '行をランダムにシャッフルするには？',
  'line-tools.faq5-answer':
    '「行をシャッフル」を使用して、テキスト行の順序を即座にランダム化します。ランダムリストの作成、データのランダム化、コンテンツのシャッフルに最適です。データ分析、テスト、コンテンツ整理に不可欠です。任意のテキストコンテンツで動作します。',
  'line-tools.faq6-question': '特定の基準で行をフィルタリングできますか？',
  'line-tools.faq6-answer':
    'はい！ラインツールは、特定のテキストを含む行、パターンに一致する行、または特定の基準を満たす行をフィルタリングできます。データフィルタリング、コンテンツ分析、テキスト処理に最適です。データサイエンティスト、開発者、コンテンツマネージャーに不可欠です。',
  'json-parser.related-guides': '関連 JSON ガイド',
  'json-parser.related-guides-desc':
    'Explore our comprehensive guides to master JSON formatting, validation, and performance optimization.',
  'json-utility.related-guides': '関連するJSONガイド',
  'json-utility.related-guides-desc':
    'JSONフォーマット、バリデーション、パフォーマンス最適化をマスターするための包括的なガイドをご覧ください。',
  'xml.formatter.title': 'XMLフォーマッター＆ビューティファイアー',
  'xml.formatter.description':
    'XMLドキュメントをフォーマット、検証、ミニファイ、美化します。XMLをHTML/JSONに変換し、XML構造を分析し、XMLフォーマットの問題を修正します。',
  'xml.formatter.input.title': 'XML入力',
  'xml.formatter.input.label': 'XMLコードを入力してください',
  'xml.formatter.options.indent': 'インデントサイズ',
  'xml.formatter.options.preserve': '空白を保持',
  'xml.formatter.actions.format': 'XMLをフォーマット',
  'xml.formatter.actions.sample': 'サンプルを読み込み',
  'xml.formatter.actions.clear': 'すべてクリア',
  'xml.formatter.actions.copy': 'コピー',
  'xml.formatter.output.formatted': 'フォーマットされたXML',
  'xml.formatter.output.minified': '最小化されたXML',
  'xml.formatter.conversion.title': 'XMLを変換',
  'xml.formatter.conversion.toHtml': 'HTMLに変換',
  'xml.formatter.conversion.toJson': 'JSONに変換',
  'xml.formatter.stats.title': 'XML統計',
  'xml.formatter.stats.elements': '要素',
  'xml.formatter.stats.attributes': '属性',
  'xml.formatter.stats.depth': '最大深度',
  'xml.formatter.stats.textNodes': 'テキストノード',
  'xml.formatter.stats.comments': 'コメント',
  'xml.formatter.stats.size': 'サイズ（バイト）',
  'xml.formatter.features.title': 'XMLフォーマッター機能',
  'xml.formatter.features.beautify.title': 'XMLビューティファイアー',
  'xml.formatter.features.beautify.description':
    'Format and beautify XML with proper indentation and structure.',
  'xml.formatter.features.validate.title': 'XMLバリデーター',
  'xml.formatter.features.validate.description':
    'Validate XML syntax and structure with detailed error reporting.',
  'xml.formatter.features.analyze.title': 'XML分析',
  'xml.formatter.features.analyze.description':
    'Analyze XML structure, count elements, attributes, and depth.',
  'xml.formatter.features.convert.title': 'XMLコンバーター',
  'xml.formatter.features.convert.description': 'XMLをHTML、JSON、その他の形式に変換します。',
  'xml.formatter.features.minify.title': 'XMLミニファイアー',
  'xml.formatter.features.minify.description':
    'Minify XML by removing unnecessary whitespace and formatting.',
  'xml.formatter.features.tools.title': 'XMLツール',
  'xml.formatter.features.tools.description':
    'Comprehensive XML toolkit with formatting, validation, and conversion tools.',
  'xml.formatter.faq.title': 'よくある質問',
  'xml.formatter.faq1.question': 'XMLフォーマットとは何ですか、なぜ重要ですか？',
  'xml.formatter.faq1.answer':
    'XML formatting involves organizing XML code with proper indentation, line breaks, and structure to improve readability and maintainability. Well-formatted XML is easier to read, debug, and collaborate on, making it essential for professional development.',
  'xml.formatter.faq2.question': 'このツールはXML構文を検証できますか？',
  'xml.formatter.faq2.answer':
    'Yes! Our XML formatter includes built-in validation that checks for syntax errors, malformed tags, and structural issues. It provides detailed error messages with line numbers to help you quickly identify and fix problems.',
  'xml.formatter.faq3.question':
    'Does the formatter preserve XML comments and processing instructions?',
  'xml.formatter.faq3.answer':
    'Absolutely! Our formatter preserves all XML elements including comments, processing instructions, CDATA sections, and DOCTYPE declarations. You can choose to keep or remove comments based on your preferences.',
  'xml.formatter.faq4.question': 'Can I convert XML to other formats like HTML or JSON?',
  'xml.formatter.faq4.answer':
    'Yes! Our XML formatter includes conversion tools that can transform XML into HTML, JSON, and other formats. This is particularly useful for data migration, API integration, and cross-platform compatibility.',
  'xml.formatter.faq5.question': 'XMLファイルサイズに制限はありますか？',
  'xml.formatter.faq5.answer':
    'Our formatter can handle large XML files efficiently. While there are practical limits for browser processing, most standard XML documents (up to several MB) can be formatted without issues. For very large files, consider processing in chunks.',
  'xml.formatter.blog.learn-more': 'XMLフォーマットについて詳しく学ぶ：',
  'xml.formatter.blog.guide-title': 'XML Best Practices Guide',
  'js-formatter.title': 'JavaScriptフォーマッター・ビューティファイアー',
  'js-formatter.description':
    'Format, beautify, minify, and validate JavaScript code online. Free JS formatter with syntax highlighting, error detection, and ES6 conversion.',
  'js-formatter.input': 'JavaScript入力',
  'js-formatter.output': 'JavaScript出力',
  'js-formatter.load-sample': 'サンプルを読み込み',
  'js-formatter.clear': 'すべてクリア',
  'js-formatter.copy': 'コピー',
  'js-formatter.process': '処理',
  'js-formatter.formatted': 'フォーマット済み',
  'js-formatter.minified': '圧縮済み',
  'js-formatter.stats': '統計',
  'js-formatter.validate': '検証',
  'js-formatter.convert': 'ES6に変換',
  'js-formatter.format-options': 'フォーマットオプション',
  'js-formatter.indent-size': 'インデントサイズ',
  'js-formatter.use-tabs': 'タブを使用',
  'js-formatter.preserve-comments': 'コメントを保持',
  'js-formatter.add-semicolons': 'セミコロンを追加',
  'js-formatter.fix-indentation': 'インデントを修正',
  'js-formatter.syntax-error': 'JavaScript構文エラー',
  'js-formatter.features-title': 'JavaScriptフォーマッターの機能',
  'js-formatter.feature-formatting': 'コードフォーマット',
  'js-formatter.feature-formatting-desc':
    'Format JavaScript code with proper indentation, spacing, and structure for better readability.',
  'js-formatter.feature-validation': '構文検証',
  'js-formatter.feature-validation-desc':
    'Validate JavaScript syntax and detect errors with detailed error messages and line numbers.',
  'js-formatter.feature-minification': 'コード圧縮',
  'js-formatter.feature-minification-desc':
    'Minify JavaScript code by removing whitespace, comments, and unnecessary characters to reduce file size.',
  'js-formatter.feature-stats': 'コード統計',
  'js-formatter.feature-stats-desc':
    'Analyze JavaScript code with detailed statistics including lines, functions, variables, and complexity metrics.',
  'js-formatter.feature-conversion': 'ES6変換',
  'js-formatter.feature-conversion-desc':
    'Convert legacy JavaScript code to modern ES6+ syntax with arrow functions, const/let, and template literals.',
  'js-formatter.feature-customization': 'カスタマイズ可能なオプション',
  'js-formatter.feature-customization-desc':
    'Customize formatting options including indent size, tab usage, comment preservation, and semicolon handling.',
  'js-formatter.faq-title': 'よくある質問',
  'js-formatter.faq1-question': 'JavaScriptフォーマットとは何で、なぜ必要ですか？',
  'js-formatter.faq1-answer':
    "JavaScript formatting makes your code more readable by adding proper indentation, spacing, and structure. It's essential for debugging, maintenance, and collaboration on JavaScript projects.",
  'js-formatter.faq2-question': 'JavaScript構文を検証するにはどうすればよいですか？',
  'js-formatter.faq2-answer':
    'Our JavaScript formatter automatically validates JavaScript syntax and structure. It checks for proper syntax, missing semicolons, and common JavaScript errors with detailed error messages.',
  'js-formatter.faq3-question': 'JavaScript圧縮とは何ですか？',
  'js-formatter.faq3-answer':
    "JavaScript minification removes unnecessary whitespace, comments, and formatting to reduce file size. It's useful for production environments where file size and loading speed matter.",
  'js-formatter.faq4-question': 'レガシーJavaScriptをES6+に変換できますか？',
  'js-formatter.faq4-answer':
    'Yes! Our JavaScript formatter includes conversion tools to transform legacy JavaScript code into modern ES6+ syntax, including arrow functions, const/let declarations, and template literals.',
  'js-formatter.faq5-question': 'JavaScript美化とは何ですか？',
  'js-formatter.faq5-answer':
    'JavaScript beautification formats JavaScript code with proper indentation, line breaks, and structure to improve readability and maintainability.',
  'js-formatter.faq6-question': '特殊文字を含むJavaScriptを処理するにはどうすればよいですか？',
  'js-formatter.faq6-answer':
    'Our tool automatically handles JavaScript escape sequences and special characters, ensuring proper encoding and preventing parsing errors.',
  'js-formatter.faq7-question': '大きなJavaScriptファイルをフォーマットできますか？',
  'js-formatter.faq7-answer':
    'Yes! Our JavaScript formatter can handle large JavaScript files efficiently, with options for both formatting and minification.',
  'js-formatter.faq8-question': 'JavaScriptと他の言語の違いは何ですか？',
  'js-formatter.faq8-answer':
    'JavaScript is a dynamic, interpreted programming language primarily used for web development. It has unique features like prototypal inheritance and dynamic typing.',
  'js-formatter.faq9-question': '不正なJavaScriptを修正するにはどうすればよいですか？',
  'js-formatter.faq9-answer':
    'Our JavaScript formatter identifies and highlights syntax errors, making it easy to locate and fix issues in your JavaScript code.',
  'js-formatter.faq10-question': 'フォーマットオプションをカスタマイズできますか？',
  'js-formatter.faq10-answer':
    'Yes! You can customize indent size, use tabs or spaces, preserve comments, add semicolons, and choose from various formatting preferences.',
  'js-formatter.blog-link-text':
    'Learn more about JavaScript formatting in our comprehensive guide:',
  'js-formatter.blog-link-title': 'JavaScriptフォーマッターガイド',
  'html-formatter.title': 'HTMLフォーマッター＆ビューティファイアー',
  'html-formatter.description':
    'Format, beautify, minify, and validate HTML code online. Free HTML formatter with syntax highlighting, error detection, and XHTML conversion.',
  'html-formatter.tab-formatted': 'フォーマット済み',
  'html-formatter.tab-minified': '圧縮済み',
  'html-formatter.tab-stats': '統計',
  'html-formatter.tab-validate': '検証',
  'html-formatter.tab-convert': 'XHTMLに変換',
  'html-formatter.options-title': 'フォーマットオプション',
  'html-formatter.option-indent-size': 'インデントサイズ',
  'html-formatter.option-use-tabs': 'タブを使用',
  'html-formatter.option-preserve-comments': 'コメントを保持',
  'html-formatter.option-sort-attributes': '属性をソート',
  'html-formatter.option-remove-empty-attributes': '空の属性を削除',
  'html-formatter.option-fix-indentation': 'インデントを修正',
  'html-formatter.input-title': 'HTML入力',
  'html-formatter.output-title': 'HTML出力',
  'html-formatter.load-sample': 'サンプルを読み込み',
  'html-formatter.clear': 'すべてクリア',
  'html-formatter.process': '処理',
  'html-formatter.copy': 'コピー',
  'html-formatter.blog-link-text': 'HTMLフォーマットについて詳しく学ぶ：',
  'html-formatter.blog-link-title': '完全HTMLフォーマッターガイド',
  'html-formatter.download': 'ダウンロード',
  'html-formatter.validation-error': 'HTML検証エラー',
  'html-formatter.stats-title': 'HTML統計',
  'html-formatter.stats-lines': '行数',
  'html-formatter.stats-characters': '文字数',
  'html-formatter.stats-words': '単語数',
  'html-formatter.stats-tags': 'タグ数',
  'html-formatter.stats-attributes': '属性数',
  'html-formatter.stats-comments': 'コメント数',
  'html-formatter.stats-links': 'リンク数',
  'html-formatter.stats-images': '画像数',
  'html-formatter.stats-forms': 'フォーム数',
  'html-formatter.stats-size': 'サイズ',
  'html-formatter.features-title': '強力なHTMLツール',
  'html-formatter.feature-formatting': 'HTMLフォーマット',
  'html-formatter.feature-formatting-desc':
    'Beautify and format HTML code with proper indentation and structure.',
  'html-formatter.feature-validation': 'HTML検証',
  'html-formatter.feature-validation-desc':
    'Validate HTML syntax and detect errors with detailed feedback.',
  'html-formatter.feature-minification': 'HTML圧縮',
  'html-formatter.feature-minification-desc':
    'Minify HTML code to reduce file size and improve loading speed.',
  'html-formatter.feature-stats': 'HTML統計',
  'html-formatter.feature-stats-desc':
    'Analyze HTML structure with detailed statistics and metrics.',
  'html-formatter.feature-conversion': 'XHTML変換',
  'html-formatter.feature-conversion-desc':
    'Convert HTML to XHTML format with proper XML compliance.',
  'html-formatter.feature-customization': 'カスタマイズ可能なオプション',
  'html-formatter.feature-customization-desc':
    'Customize formatting preferences including indentation and attribute sorting.',
  'html-formatter.faq-title': 'よくある質問',
  'html-formatter.faq1-question': 'HTMLフォーマットとは何で、なぜ必要ですか？',
  'html-formatter.faq1-answer':
    'HTMLフォーマットは、適切なインデント、スペーシング、構造を追加することで、コードをより読みやすくします。Webプロジェクトでのデバッグ、メンテナンス、コラボレーションに不可欠です。',
  'html-formatter.faq2-question': 'HTML検証はどのように機能しますか？',
  'html-formatter.faq2-answer':
    'HTMLバリデーターは、構文エラー、閉じられていないタグ、構造的な問題をチェックします。問題を迅速に修正できるよう、行番号付きの詳細なエラーメッセージを提供します。',
  'html-formatter.faq3-question': 'HTML圧縮とは何ですか？',
  'html-formatter.faq3-answer':
    'HTMLミニファイは、不要な空白、コメント、フォーマットを削除してファイルサイズを削減します。これにより、ウェブサイトの読み込み速度とパフォーマンスが向上します。',
  'html-formatter.faq4-question': 'HTMLをXHTMLに変換できますか？',
  'html-formatter.faq4-answer':
    'はい！ツールはHTMLをXHTML形式に変換でき、自己終了タグと適切な属性フォーマットで適切なXML準拠を保証します。',
  'html-formatter.faq5-question': 'どのようなHTML統計が提供されますか？',
  'html-formatter.faq5-answer':
    '行数、文字数、タグ数、属性数、リンク、画像、フォームの分析を含む包括的な統計を提供します。',
  'html-formatter.faq6-question': 'このツールを使用する際、私のHTMLコードは安全ですか？',
  'html-formatter.faq6-answer':
    'はい！すべての処理はブラウザでローカルに実行されます。HTMLコードがサーバーに送信されることはなく、完全なプライバシーとセキュリティを保証します。',
  'html-formatter.faq7-question': 'フォーマットオプションをカスタマイズできますか？',
  'html-formatter.faq7-answer':
    'もちろんです！インデントサイズのカスタマイズ、タブまたはスペースの使用、コメントの保持、属性の並び替え、様々なフォーマット設定から選択できます。',
  'html-formatter.faq8-question': 'このツールはHTML5をサポートしていますか？',
  'html-formatter.faq8-answer':
    'はい！HTMLフォーマッターは、包括的なフォーマットと検証のために、すべてのHTML5要素、属性、現代のWeb標準をサポートしています。',
  'html-formatter.faq9-question': '埋め込まれたCSSとJavaScriptを含むHTMLをフォーマットできますか？',
  'html-formatter.faq9-answer':
    'はい！ツールは埋め込まれたCSSとJavaScriptを含むHTMLドキュメントをフォーマットでき、HTML部分をフォーマットしながら適切な構造を維持します。',
  'html-formatter.faq10-question': 'このHTMLフォーマッターは無料で使用できますか？',
  'html-formatter.faq10-answer':
    'はい！HTMLフォーマッターは完全に無料で使用でき、登録は不要です。すべての機能が制限なく利用できます。',
  'case-converter.faq-title': 'よくある質問',
  'case-converter.faq-subtitle': 'ケースコンバーターに関するよくある質問',
  'case-converter.faq1-question': 'camelCaseとPascalCaseの違いは何ですか？',
  'case-converter.faq1-answer':
    'camelCaseは小文字で始まります（例：「myVariable」）、一方PascalCaseは大文字で始まります（例：「MyVariable」）。どちらも後続の単語の最初の文字を大文字にします。テキストフォーマットとテキスト分析ツールについてさらに学びましょう。',
  'case-converter.faq2-question':
    'オンラインでテキストをタイトルケースに変換するにはどうすればよいですか？',
  'case-converter.faq2-answer':
    'オンラインでテキストをタイトルケースに変換するには、無料のCase Converterツールを使用してください。テキストを貼り付け、「Title Case」を選択すると、即座に結果が得られます。タイトルケースは「Hello World」のように各主要単語の最初の文字を大文字にします。見出し、タイトル、適切なフォーマットに最適です。登録不要です。',
  'case-converter.faq3-question': '複数行のテキストを一度に変換できますか？',
  'case-converter.faq3-answer':
    'はい！当社のCase Converterは複数行のテキスト変換をサポートしています。テキストを貼り付けるだけで、選択したケース形式に従ってすべての行が変換されます。ドキュメント、コード、リストの処理に最適です。追加のフォーマットオプションについては、テキストフォーマッターをお試しください。',
  'case-converter.faq4-question': 'snake_caseとは何ですか？いつ使用すべきですか？',
  'case-converter.faq4-answer':
    'snake_caseは単語を区切るためにアンダースコアを使用します（例：「my_variable_name」）。Pythonプログラミング、データベース命名規則、ファイル命名で一般的に使用されます。当社のツールは、他のプログラミングケーススタイルとともにsnake_case変換をサポートしています。Python開発者とデータベース管理者に不可欠です。',
  'case-converter.faq5-question': 'kebab-caseとは何ですか？いつ使用すべきですか？',
  'case-converter.faq5-answer':
    'kebab-caseは単語を区切るためにハイフンを使用します（例：「my-variable-name」）。URL、CSSクラス、HTML属性、コマンドラインツールで一般的に使用されます。当社のコンバーターは、テキストフォーマットオプションとともにkebab-caseを処理します。',
  'case-converter.faq6-question': '交互ケースはどのように機能しますか？',
  'case-converter.faq6-answer':
    '交互ケースは大文字と小文字を交互に切り替えます（例：「AlTeRnAtInG cAsE」）。独特なテキスト効果の作成、ケース感度のテスト、ソーシャルメディアのフォーマットに役立ちます。当社のツールは即座に交互ケース変換を提供します。',
  'case-converter.faq7-question': 'テキストを逆ケースに変換できますか？',
  'case-converter.faq7-answer':
    'はい！逆ケースは各文字のケースを反転させます - 大文字は小文字になり、その逆も同様です。これは、アプリケーションでのケース感度のテスト、テキスト効果の作成、データ処理に役立ちます。当社のテキストアナライザーは結果の分析に役立ちます。',
  'case-converter.faq8-question': 'ケースコンバーターは無料で使用できますか？',
  'case-converter.faq8-answer':
    'はい！当社のCase Converterは登録不要で完全に無料で使用できます。すべてのテキスト処理はブラウザ内でローカルに行われ、最大限のプライバシーとセキュリティを確保します。データは保存されたり、サーバーに送信されたりすることはありません。',
  'case-converter.faq9-question': 'テキストを大文字に変換する方法は？',
  'case-converter.faq9-answer':
    'ケースコンバーターを使ってテキストを大文字に変換するのは簡単です。入力フィールドにテキストを貼り付け、変換オプションから「UPPERCASE」を選択すると、すべての文字が即座に大文字に変換されます。大文字は強調、見出し、頭字語、プログラミングの定数などによく使用されます。注目を集めるタイトルを作成したり、技術文書をフォーマットしたりするのに最適です。',
  'case-converter.faq10-question': '小文字変換はいつ使うべきですか？',
  'case-converter.faq10-answer':
    '小文字変換は、テキストのフォーマットを標準化したり、ユーザー入力を正規化したり、大文字小文字を区別しない比較のためにテキストを準備したりする必要がある場合に便利です。ツールで「lowercase」を選択するだけで、すべての大文字が小文字に変換されます。メールアドレス、ユーザー名、データベースクエリ、大文字小文字の一貫性が重要な検索機能でよく使用されます。',
  'case-converter.faq11-question':
    'slugifyとは何ですか？SEOフレンドリーなURLをどのように作成しますか？',
  'case-converter.faq11-answer':
    'Slugifyは、特殊文字を削除し、スペースをハイフンに置き換え、小文字に変換することで、テキストをURL対応のスラッグに変換します。たとえば、「My Blog Post Title!」は「my-blog-post-title」になります。これは、ブログ投稿、商品ページ、WebコンテンツのクリーンでSEO最適化されたURLを作成するために不可欠です。検索エンジンは読みやすいURLを好み、スラッグ化されたテキストはSEOランキングとユーザーエクスペリエンスの両方を向上させます。',
  'encode-decode.tool-name': 'エンコード/デコード',
  'encode-decode.faq-title': 'よくある質問',
  'encode-decode.faq-subtitle': 'エンコード/デコードに関する一般的な質問',
  'encode-decode.faq1-question': 'URLエンコーディングとは何ですか？なぜ必要ですか？',
  'encode-decode.faq1-answer':
    'URLエンコーディングは、URLでの安全な送信のために特殊文字をパーセントエンコード形式（スペースの場合は%20など）に変換します。ウェブ開発、API通信、ユーザー入力の処理に不可欠です。当ツールは即座にURLエンコーディングとデコーディングを提供します。',
  'encode-decode.faq2-question': 'Base64エンコーディングは何に使用されますか？',
  'encode-decode.faq2-answer':
    'Base64エンコーディングは、64文字を使用してバイナリデータをASCIIテキストに変換します。メール添付ファイル、データ送信、API認証、テキスト形式でのバイナリデータ保存によく使用されます。当社の<a href="/text-analyzer" title="テキスト分析ツール">テキスト分析ツール</a>は、エンコードされたコンテンツの分析に役立ちます。',
  'encode-decode.faq3-question':
    'Base64テキストをオンラインでデコードするにはどうすればよいですか？',
  'encode-decode.faq3-answer':
    'Base64テキストをオンラインでデコードするには、当社の無料エンコード/デコードツールを使用してください。「Base64 Decode」を選択し、エンコードされたテキストを貼り付けて、即座に結果を取得できます。APIレスポンス、メール添付ファイル、データファイルのデコードに最適です。登録は不要です。',
  'encode-decode.faq4-question': 'HTMLエンコーディングとは何ですか？なぜ重要ですか？',
  'encode-decode.faq4-answer':
    'HTMLエンコーディングは、特殊文字をHTMLエンティティ（<の場合は&lt;など）に変換して、HTMLタグとして解釈されることを防ぎます。ウェブセキュリティ、XSS攻撃の防止、ウェブコンテンツでの特殊文字の安全な表示に不可欠です。',
  'encode-decode.faq5-question': '複数の形式でテキストを一度にエンコードできますか？',
  'encode-decode.faq5-answer':
    'はい！当ツールはURL、Base64、HTML、JSONを含む複数のエンコーディング形式をサポートしています。異なるエンコーディング方法間でテキストを即座に変換できます。API、ウェブアプリケーション、データ処理で作業する開発者に最適です。追加の処理には<a href="/text-formatter" title="テキストフォーマッター">テキストフォーマッター</a>をお試しください。',
  'encode-decode.faq6-question': 'Unicode正規化とは何ですか？いつ使用しますか？',
  'encode-decode.faq6-answer':
    'Unicode正規化は、同じ文字の異なるUnicode表現を一貫した形式に変換することでテキストを標準化します。テキスト比較、検索機能、異なるシステムやプラットフォーム間でのデータ一貫性に不可欠です。',
  'encode-decode.faq7-question': 'JSON文字列を適切にエスケープするにはどうすればよいですか？',
  'encode-decode.faq7-answer':
    '当社のJSONエスケープ機能を使用して、JSON文字列内の特殊文字を適切にエスケープし、有効なJSON形式を確保してください。引用符、バックスラッシュ、制御文字をエスケープされた等価物に変換します。API開発とデータシリアライゼーションに不可欠です。',
};
