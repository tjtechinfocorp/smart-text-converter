export const zh = {
  'app.title': '文本转换器',
  'nav.home': '首页',
  'nav.case-converter': '大小写转换器',
  'nav.text-formatter': '文本格式化器',
  'nav.line-tools': '行工具',
  'nav.encode-decode': '编码/解码',
  'nav.text-analyzer': '文本分析器',
  'nav.text-generator': '文本生成器',
  'nav.text-transformation': '文本转换',
  'nav.analysis-utilities': '分析和工具',
  'nav.json': 'JSON',
  'nav.json-formatter': '格式化器',
  'nav.json-parser': '解析器',
  'nav.js-formatter': 'JavaScript',
  'nav.xml-formatter': 'XML',
  'nav.html-formatter': 'HTML',
  'nav.css-formatter': 'CSS',
  'nav.sql-formatter': 'SQL',
  'nav.blog': '博客',
  'blog.title': '博客',
  'blog.subtitle':
    'Expert tips and guides on text processing, case conversion, programming conventions, SEO best practices, and accessibility guidelines.',
  'blog.search-placeholder': '搜索博客文章...',
  'json-utility.title': 'JSON格式化器和验证器',
  'json-utility.subtitle': '即时格式化、验证和美化JSON数据。面向开发者和数据分析师的专业JSON工具。',
  'json-utility.input': 'JSON输入',
  'json-utility.output': 'JSON输出',
  'json-utility.load-sample': '加载示例',
  'json-utility.clear-all': '清除全部',
  'json-utility.upload-file': '上传文件',
  'json-utility.copy': '复制',
  'json-utility.download': '下载',
  'json-utility.formatted': '已格式化',
  'json-utility.minified': '已压缩',
  'json-utility.stats': '统计信息',
  'json-utility.errors': '错误',
  'json-utility.warnings': '警告',
  'json-utility.valid-json': '有效JSON',
  'json-utility.format-options': '格式化选项',
  'json-utility.indent-size': '缩进大小',
  'json-utility.sort-keys': '排序键',
  'json-utility.features-title': '强大的JSON工具',
  'json-utility.validation': 'JSON验证',
  'json-utility.validation-desc': '使用详细的错误信息和行号验证JSON语法。',
  'css-formatter.title': 'CSS格式化器和美化器',
  'css-formatter.subtitle':
    'Format, minify, validate, and optimize your CSS code with comprehensive tools.',
  'css-formatter.input': 'CSS输入',
  'css-formatter.output': '格式化CSS',
  'css-formatter.minified-output': '压缩CSS',
  'css-formatter.validation-results': '验证结果',
  'css-formatter.optimized-output': '优化CSS',
  'css-formatter.converted-output': '转换CSS',
  'css-formatter.lint-results': '代码检查结果',
  'css-formatter.format-css': '格式化CSS',
  'css-formatter.minify-css': '压缩CSS',
  'css-formatter.validate-css': '验证CSS',
  'css-formatter.optimize-css': '优化CSS',
  'css-formatter.convert-css': '转换CSS',
  'css-formatter.lint-css': '代码检查CSS',
  'css-formatter.load-sample': '加载示例',
  'css-formatter.clear-all': '清除全部',
  'css-formatter.copy': '复制',
  'css-formatter.download': '下载',
  'css-formatter.clear': '清除',
  'css-formatter.format-options': '格式化选项',
  'css-formatter.indent-size': '缩进大小',
  'css-formatter.indent-type': '缩进类型',
  'css-formatter.preserve-comments': '保留注释',
  'css-formatter.sort-properties': '排序属性',
  'css-formatter.css-tools': 'CSS工具',
  'css-formatter.css-statistics': 'CSS统计',
  'css-formatter.original-length': '原始长度',
  'css-formatter.formatted-length': '格式化长度',
  'css-formatter.lines': '行数',
  'css-formatter.rules': '规则',
  'css-formatter.selectors': '选择器',
  'css-formatter.properties': '属性',
  'css-formatter.comments': '注释',
  'css-formatter.compression': '压缩',
  'css-formatter.errors': '错误',
  'css-formatter.warnings': '警告',
  'css-formatter.processing': '处理CSS中...',
  'css-formatter.features-title': '综合CSS工具',
  'css-formatter.formatting': 'CSS格式化',
  'css-formatter.formatting-desc':
    'Beautify and format your CSS code with proper indentation and organization.',
  'css-formatter.minification': 'CSS压缩',
  'css-formatter.minification-desc':
    'Compress your CSS files to reduce file size and improve loading performance.',
  'css-formatter.validation': 'CSS验证',
  'css-formatter.validation-desc':
    'Validate your CSS code for syntax errors and browser compatibility issues.',
  'css-formatter.optimization': 'CSS优化',
  'css-formatter.optimization-desc':
    'Optimize your CSS for better performance and maintainability.',
  'css-formatter.conversion': 'CSS转换',
  'css-formatter.conversion-desc':
    'Convert CSS to SCSS, SASS, LESS, or Stylus preprocessor formats.',
  'css-formatter.linting': 'CSS代码检查',
  'css-formatter.linting-desc': '检查您的CSS代码的最佳实践和潜在问题。',
  'css-formatter.performance-metrics': '性能指标',
  'css-formatter.original-size': '原始大小',
  'css-formatter.formatted-size': '格式化大小',
  'css-formatter.size-savings': '大小节省',
  'css-formatter.css-tools-explanation': 'CSS工具和功能',
  'css-formatter.benefits-title': '为什么使用我们的CSS工具？',
  'css-formatter.benefit-1': '提高代码可读性和可维护性',
  'css-formatter.benefit-2': '减少文件大小以获得更快的加载时间',
  'css-formatter.benefit-3': '捕获语法错误和兼容性问题',
  'css-formatter.benefit-4': '在不同CSS预处理器格式之间转换',
  'css-formatter.faq-title': '常见问题',
  'css-formatter.faq1-question': '什么是CSS格式化，为什么它很重要？',
  'css-formatter.faq1-answer':
    'CSS formatting is the process of organizing and structuring your CSS code with proper indentation, spacing, and organization. It improves code readability, makes debugging easier, and helps maintain consistent coding standards across projects.',
  'css-formatter.faq2-question': 'CSS压缩如何改善网站性能？',
  'css-formatter.faq2-answer':
    'CSS minification removes unnecessary whitespace, comments, and redundant code from your stylesheets. This reduces file size by 20-50%, leading to faster page load times, reduced bandwidth usage, and improved user experience, especially on mobile devices.',
  'css-formatter.faq3-question': '我应该注意哪些类型的CSS验证错误？',
  'css-formatter.faq3-answer':
    'Common CSS validation errors include missing semicolons, unmatched braces, invalid property values, unsupported CSS properties, and syntax errors. Our validator helps identify these issues before they cause rendering problems in browsers.',
  'css-formatter.faq4-question': '我可以将CSS转换为SCSS、SASS、LESS或Stylus吗？',
  'css-formatter.faq4-answer':
    'Yes! Our CSS converter supports conversion to popular preprocessor formats including SCSS, SASS, LESS, and Stylus. This helps you migrate existing CSS projects to use preprocessor features like variables, mixins, and nesting.',
  'css-formatter.faq5-question': '什么是CSS代码检查，它如何帮助？',
  'css-formatter.faq5-answer':
    'CSS linting analyzes your code for potential issues, best practices violations, and style inconsistencies. It helps maintain code quality, prevents common mistakes, and ensures your CSS follows modern standards and conventions.',
  'css-formatter.blog-title': '了解更多CSS格式化知识',
  'css-formatter.blog-description':
    'Master CSS formatting with our comprehensive guide covering best practices, tools, and techniques. Learn how to format, beautify, minify, and validate CSS code effectively.',
  'css-formatter.blog-link': '阅读CSS格式化指南',
  'sql-formatter.title': 'SQL格式化器和美化器',
  'sql-formatter.subtitle': '使用综合工具格式化、压缩、验证和优化您的SQL查询。',
  'sql-formatter.input': 'SQL输入',
  'sql-formatter.output': '格式化的SQL',
  'sql-formatter.minified-output': '压缩的SQL',
  'sql-formatter.validation-results': '验证结果',
  'sql-formatter.optimized-output': '优化的SQL',
  'sql-formatter.converted-output': '转换的SQL',
  'sql-formatter.lint-results': 'Lint结果',
  'sql-formatter.format-sql': '格式化SQL',
  'sql-formatter.minify-sql': '压缩SQL',
  'sql-formatter.validate-sql': '验证SQL',
  'sql-formatter.optimize-sql': '优化SQL',
  'sql-formatter.convert-sql': '转换SQL',
  'sql-formatter.lint-sql': 'Lint SQL',
  'sql-formatter.load-sample': '加载示例',
  'sql-formatter.clear-all': '清空所有',
  'sql-formatter.copy': '复制',
  'sql-formatter.download': '下载',
  'sql-formatter.clear': '清空',
  'sql-formatter.format-options': '格式化选项',
  'sql-formatter.indent-size': '缩进大小',
  'sql-formatter.indent-type': '缩进类型',
  'sql-formatter.preserve-comments': '保留注释',
  'sql-formatter.sort-keywords': '排序关键字',
  'sql-formatter.keyword-case': '关键字大小写',
  'sql-formatter.function-case': '函数大小写',
  'sql-formatter.data-type-case': '数据类型大小写',
  'sql-formatter.align-columns': '对齐列',
  'sql-formatter.max-line-length': '最大行长度',
  'sql-formatter.add-semicolon': '添加分号',
  'sql-formatter.remove-extra-spaces': '删除多余空格',
  'sql-formatter.sql-tools': 'SQL工具',
  'sql-formatter.sql-statistics': 'SQL统计',
  'sql-formatter.original-length': '原始长度',
  'sql-formatter.formatted-length': '格式化后长度',
  'sql-formatter.lines': '行数',
  'sql-formatter.statements': '语句',
  'sql-formatter.keywords': '关键字',
  'sql-formatter.tables': '表',
  'sql-formatter.columns': '列',
  'sql-formatter.compression': '压缩',
  'sql-formatter.errors': '错误',
  'sql-formatter.warnings': '警告',
  'sql-formatter.processing': '处理SQL中...',
  'sql-formatter.features-title': '综合SQL工具',
  'sql-formatter.formatting': 'SQL格式化',
  'sql-formatter.formatting-desc': '美化并格式化您的SQL查询，具有适当的缩进和组织结构。',
  'sql-formatter.minification': 'SQL压缩',
  'sql-formatter.minification-desc': '压缩您的SQL查询以减少文件大小并提高性能。',
  'sql-formatter.validation': 'SQL验证',
  'sql-formatter.validation-desc': '验证您的SQL查询是否存在语法错误和数据库兼容性问题。',
  'sql-formatter.optimization': 'SQL优化',
  'sql-formatter.optimization-desc': '优化您的SQL查询以获得更好的性能和效率。',
  'sql-formatter.conversion': 'SQL转换',
  'sql-formatter.conversion-desc':
    '在不同数据库方言之间转换SQL（MySQL、PostgreSQL、SQL Server等）。',
  'sql-formatter.linting': 'SQL代码检查',
  'sql-formatter.linting-desc': '检查您的SQL代码是否符合最佳实践和潜在问题。',
  'sql-formatter.performance-metrics': '性能指标',
  'sql-formatter.original-size': '原始大小',
  'sql-formatter.formatted-size': '格式化后大小',
  'sql-formatter.size-savings': '节省空间',
  'sql-formatter.sql-tools-explanation': 'SQL工具和功能',
  'sql-formatter.benefits-title': '为什么使用我们的SQL工具？',
  'sql-formatter.benefit-1': '提高查询可读性和可维护性',
  'sql-formatter.benefit-2': '减少查询复杂性并提高性能',
  'sql-formatter.benefit-3': '捕获语法错误和数据库兼容性问题',
  'sql-formatter.benefit-4': '在不同数据库方言之间转换',
  'sql-formatter.faq-title': '常见问题',
  'sql-formatter.faq1-question': '什么是SQL格式化，为什么它很重要？',
  'sql-formatter.faq1-answer':
    'SQL格式化是使用适当的缩进、间距和组织结构来组织和构建SQL查询的过程。它提高了代码可读性，使调试更容易，并有助于在数据库项目中维护一致的编码标准。',
  'sql-formatter.faq2-question': 'SQL压缩如何提高数据库性能？',
  'sql-formatter.faq2-answer':
    'SQL压缩从查询中删除不必要的空白、注释和冗余代码。这减少了查询大小，提高了解析速度，并可以在数据库操作中带来更好的性能，特别是对于复杂查询。',
  'sql-formatter.faq3-question': '我应该注意哪些类型的SQL验证错误？',
  'sql-formatter.faq3-answer':
    '常见的SQL验证错误包括缺少分号、不匹配的括号、无效语法、不支持的关键字以及数据库特定的兼容性问题。我们的验证器帮助在执行问题发生之前识别这些问题。',
  'sql-formatter.faq4-question': '我可以在不同的数据库方言之间转换SQL吗？',
  'sql-formatter.faq4-answer':
    '是的！我们的SQL转换器支持在流行的数据库方言之间转换，包括MySQL、PostgreSQL、SQL Server、Oracle和SQLite。这帮助您在不同数据库系统之间迁移查询。',
  'sql-formatter.faq5-question': '什么是SQL代码检查，它如何帮助？',
  'sql-formatter.faq5-answer':
    'SQL代码检查分析您的查询以查找潜在问题、最佳实践违规和性能问题。它帮助维护代码质量，防止常见错误，并确保您的SQL遵循现代标准和约定。',
  'sql-formatter.blog-title': '了解更多关于SQL格式化',
  'sql-formatter.blog-description':
    '通过我们的综合指南掌握SQL格式化，涵盖最佳实践、工具和技术。学习如何有效地格式化、美化、压缩和验证SQL查询。',
  'sql-formatter.blog-link': '阅读SQL格式化指南',
  'json-utility.formatting': 'JSON格式化',
  'json-utility.formatting-desc': '使用可自定义的缩进和格式化选项美化打印JSON。',
  'json-utility.minification': 'JSON压缩',
  'json-utility.minification-desc': '通过删除不必要的空白和格式化来压缩JSON。',
  'json-utility.analysis': 'JSON分析',
  'json-utility.analysis-desc': '获取关于JSON数据结构和内容的详细统计信息。',
  'json-utility.what-is-json': '什么是JSON？',
  'json-utility.json-explanation':
    'JSON（JavaScript对象表示法）是一种轻量级、基于文本的数据交换格式，人类易于读写，机器易于解析和生成。它基于JavaScript编程语言的子集，常用于在Web应用程序中传输数据。',
  'json-utility.json-benefits':
    'JSON是语言无关的，可以与几乎任何编程语言一起使用。它提供了一种简单的基于文本的方式来表示和存储数据结构和对象，使其成为API、配置文件和系统间数据交换的理想选择。',
  'json-utility.json-usage':
    'JSON在Web开发中广泛用于API响应、配置文件、数据存储以及客户端和服务器应用程序之间的通信。超过95%的现代API使用JSON进行数据传输。',
  'json-utility.json-example': 'JSON示例',
  'json-utility.comprehensive-features': '全面的JSON工具',
  'json-utility.formatting-tools': '格式化工具',
  'json-utility.pretty-print': '美化打印和格式化',
  'json-utility.indentation-control': '自定义缩进(1-8个空格)',
  'json-utility.key-sorting': '字母键排序',
  'json-utility.validation-tools': '验证工具',
  'json-utility.syntax-validation': '实时语法验证',
  'json-utility.error-detection': '详细错误检测',
  'json-utility.line-highlighting': '错误行高亮',
  'json-utility.auto-fix': '自动错误修复',
  'json-utility.analysis-tools': '分析工具',
  'json-utility.structure-analysis': '结构分析',
  'json-utility.size-statistics': '大小和性能统计',
  'json-utility.tree-view': '交互式树形视图',
  'json-utility.data-types': '数据类型分析',
  'json-utility.faq-title': '常见问题',
  'json-utility.faq-1-question': '为什么使用JSON格式化器？',
  'json-utility.faq-1-answer':
    'JSON格式化器帮助您即时验证、格式化和美化JSON数据。它提供错误检测、语法高亮，使JSON数据更易读。对于调试API、验证数据和确保正确的JSON结构至关重要。',
  'json-utility.faq-2-question': '如何格式化JSON文件？',
  'json-utility.faq-2-answer':
    '只需将您的JSON数据粘贴到输入字段中，点击"格式化/美化"，工具将自动使用适当的缩进和结构进行格式化。您也可以使用上传按钮直接上传JSON文件。',
  'json-utility.faq-3-question': '我的JSON数据安全吗？',
  'json-utility.faq-3-answer':
    '是的，所有处理都在您的浏览器中本地完成。您的JSON数据永远不会发送到我们的服务器，确保完全的隐私和安全。该工具完全在客户端工作，提供最大的数据保护。',
  'json-utility.faq-4-question': '如果我的JSON有错误怎么办？',
  'json-utility.faq-4-answer':
    '我们的JSON验证器将突出显示语法错误，并提供详细的错误信息和行号。该工具通常可以为常见问题（如缺少逗号、引号或括号）建议修复方案。',
  'json-utility.faq-5-question': '我可以离线使用此工具吗？',
  'json-utility.faq-5-answer':
    '是的，页面加载后，您可以离线使用JSON格式化器。所有处理都在您的浏览器中本地进行，因此在初始页面加载后不需要互联网连接。',

  // JSON Formatter FAQ (for FAQ component)
  'json-formatter.faq-title': '常见问题',
  'json-formatter.faq-subtitle': '关于JSON格式化您需要了解的一切',
  'json-formatter.tool-name': 'JSON格式化器',
  'json-formatter.faq1-question': '为什么使用JSON格式化器？',
  'json-formatter.faq1-answer':
    'JSON格式化器帮助您即时验证、格式化和美化JSON数据。它提供错误检测、语法高亮，使JSON数据更易读。对于调试API、验证数据和确保正确的JSON结构至关重要。',
  'json-formatter.faq2-question': '如何格式化JSON文件？',
  'json-formatter.faq2-answer':
    '只需将您的JSON数据粘贴到输入字段中，点击"格式化/美化"，工具将自动使用适当的缩进和结构进行格式化。您也可以使用上传按钮直接上传JSON文件。',
  'json-formatter.faq3-question': '我的JSON数据安全吗？',
  'json-formatter.faq3-answer':
    '是的，所有处理都在您的浏览器中本地进行。您的JSON数据永远不会发送到我们的服务器，确保完全的隐私和安全。该工具完全在客户端运行，以提供最大的数据保护。',
  'json-formatter.faq4-question': '如果我的JSON有错误怎么办？',
  'json-formatter.faq4-answer':
    '我们的JSON验证器将用详细的错误消息和行号突出显示语法错误。该工具经常可以为常见问题（如缺少逗号、引号或括号）建议修正。',
  'json-formatter.faq5-question': '我可以离线使用此工具吗？',
  'json-formatter.faq5-answer':
    '是的，一旦页面加载，您就可以离线使用JSON格式化器。所有处理都在您的浏览器中本地进行，因此在初始页面加载后不需要互联网连接。',
  'json-utility.use-cases-title': '常见用例',
  'json-utility.developer-use-cases': '开发者',
  'json-utility.api-development': 'API开发和测试',
  'json-utility.debugging': '调试JSON响应',
  'json-utility.configuration': '配置文件管理',
  'json-utility.data-exchange': '数据交换和集成',
  'json-utility.business-use-cases': '企业',
  'json-utility.data-analysis': '数据分析和报告',
  'json-utility.integration': '系统集成',
  'json-utility.reporting': '商业智能',
  'json-utility.automation': '流程自动化',
  'json-utility.benefits-title': '为什么选择我们的JSON格式化器？',
  'json-utility.fast-processing': '超快速',
  'json-utility.fast-processing-desc': '使用我们优化的算法和实时处理功能，即时处理大型JSON文件。',
  'json-utility.secure-processing': '100%安全',
  'json-utility.secure-processing-desc':
    '所有处理都在您的浏览器中本地进行。您的数据永远不会离开您的设备，确保完全隐私。',
  'json-utility.user-friendly': '用户友好',
  'json-utility.user-friendly-desc':
    '具有高级功能的直观界面。无需注册，可在任何设备和浏览器上工作。',
  'json-parser.title': 'JSON 解析器',
  'json-parser.subtitle': '即时解析、分析和理解JSON数据结构。获取JSON数据的详细统计和洞察。',
  'json-parser.input': 'JSON 输入',
  'json-parser.output': 'JSON 输出',
  'json-parser.load-sample': '加载示例',
  'json-parser.clear-all': '清除全部',
  'json-parser.parse': '解析 JSON',
  'json-parser.copy': '复制',
  'json-parser.download': '下载',
  'json-parser.parsed-view': '解析视图',
  'json-parser.minified-view': '压缩视图',
  'json-parser.stats-view': '统计视图',
  'json-parser.keyboard-shortcuts': '键盘快捷键',
  'json-parser.what-is-parser': '什么是 JSON 解析器？',
  'json-parser.parser-explanation':
    'JSON解析器是一个分析和处理JSON数据的工具，用于提取有意义的信息、验证结构并提供关于数据的洞察。',
  'json-parser.parser-benefits':
    'JSON解析器帮助开发者理解数据结构、调试问题、分析数据模式并优化数据处理工作流程。',
  'json-parser.parser-usage':
    '使用JSON解析器分析API响应、调试数据问题、理解复杂数据结构并优化数据处理工作流程。',
  'json-parser.comprehensive-features': '全面的 JSON 分析功能',
  'json-parser.parsing-tools': '解析工具',
  'json-parser.syntax-validation': '语法验证',
  'json-parser.error-detection': '错误检测',
  'json-parser.structure-analysis': '结构分析',
  'json-parser.data-types': '数据类型分析',
  'json-parser.analysis-tools': '分析工具',
  'json-parser.size-statistics': '大小统计',
  'json-parser.depth-analysis': '深度分析',
  'json-parser.key-analysis': '键分析',
  'json-parser.value-analysis': '值分析',
  'json-parser.utility-tools': '实用工具',
  'json-parser.copy-output': '复制输出',
  'json-parser.download-result': '下载结果',
  'json-parser.user-friendly': '用户友好界面',
  'json-parser.faq-title': '常见问题',
  'json-parser.faq-2-question': '我可以解析大型 JSON 文件吗？',
  'json-parser.faq-2-answer':
    '是的，我们的JSON解析器可以高效处理大型JSON文件。它提供实时分析和关于您数据结构的详细统计信息。',
  'json-parser.faq-3-question': '解析器提供什么类型的分析？',
  'json-parser.faq-3-answer':
    '解析器提供全面分析，包括数据类型、结构深度、键统计、值分布以及关于您JSON数据的详细洞察。',
  'json-parser.faq-4-question': 'JSON 解析器安全吗？',
  'json-parser.faq-4-answer':
    '是的，所有处理都在您浏览器的客户端完成。您的数据永远不会离开您的设备，确保完全的隐私和安全性。',
  'json-parser.faq-5-question': '我可以将解析器用于 API 开发吗？',
  'json-parser.faq-5-answer':
    'Absolutely! The JSON parser is perfect for API development, debugging responses, analyzing data structures, and understanding complex JSON payloads.',
  // JSON Parser FAQ (for FAQ component)
  'json-parser.faq-subtitle': '关于JSON解析您需要了解的一切',
  'json-parser.tool-name': 'JSON解析器',
  'json-parser.faq1-question': 'JSON解析器和格式化器有什么区别？',
  'json-parser.faq1-answer':
    'JSON格式化器专注于美化和格式化JSON数据，而JSON解析器分析结构、验证语法并提供有关数据的详细见解。',
  'json-parser.faq2-question': '我可以解析大型JSON文件吗？',
  'json-parser.faq2-answer':
    '是的，我们的JSON解析器可以高效处理大型JSON文件。它提供实时分析和有关您数据结构的详细统计信息。',
  'json-parser.faq3-question': '解析器提供什么类型的分析？',
  'json-parser.faq3-answer':
    '解析器提供综合分析，包括数据类型、结构深度、键统计、值分布以及有关您JSON数据的详细见解。',
  'json-parser.faq4-question': 'JSON解析器安全吗？',
  'json-parser.faq4-answer':
    '是的，所有处理都在您浏览器的客户端完成。您的数据永远不会离开您的设备，确保完全的隐私和安全。',
  'json-parser.faq5-question': '我可以将解析器用于API开发吗？',
  'json-parser.faq5-answer':
    '绝对可以！JSON解析器非常适合API开发、调试响应、分析数据结构和理解复杂的JSON负载。',
  'json-parser.use-cases-title': '使用案例',
  'json-parser.developer-use-cases': '开发者使用案例',
  'json-parser.api-development': 'API 开发与测试',
  'json-parser.debugging': '数据调试与分析',
  'json-parser.data-analysis': '数据结构分析',
  'json-parser.testing': 'JSON 测试与验证',
  'json-parser.business-use-cases': '商业使用案例',
  'json-parser.data-processing': '数据处理与 ETL',
  'json-parser.reporting': '数据报告与分析',
  'json-parser.integration': '系统集成',
  'json-parser.automation': '数据自动化',
  'json-parser.benefits-title': '为什么选择我们的 JSON 解析器？',
  'json-parser.fast-processing': '闪电般快速',
  'json-parser.fast-processing-desc':
    'Process large JSON files instantly with our optimized parsing engine.',
  'json-parser.secure-processing': '100% 安全',
  'json-parser.secure-processing-desc':
    'All processing happens locally in your browser - your data never leaves your device.',
  'json-parser.user-friendly-desc':
    'Intuitive interface designed for both beginners and advanced users.',
  'case-converter.title': '大小写转换器',
  'case-converter.description':
    '使用强大的大小写转换工具转换您的文本。从各种大小写格式中选择，创建SEO友好的短链接，并为任何目的格式化文本。',
  'case-converter.input-label': '输入文本',
  'case-converter.output-label': '转换后的文本',
  'case-converter.conversion-type': '转换类型',
  'case-converter.uppercase': '大写',
  'case-converter.uppercase-desc': '将所有字母转换为大写',
  'case-converter.lowercase': '小写',
  'case-converter.lowercase-desc': '将所有字母转换为小写',
  'case-converter.titlecase': '标题大小写',
  'case-converter.titlecase-desc': '将每个单词的首字母大写',
  'case-converter.sentencecase': '句子大小写',
  'case-converter.sentencecase-desc': '将每个句子的首字母大写',
  'case-converter.camelcase': '驼峰命名法',
  'case-converter.camelcase-desc': '将文本转换为驼峰命名法',
  'case-converter.pascalcase': '帕斯卡命名法',
  'case-converter.pascalcase-desc': '将文本转换为帕斯卡命名法',
  'case-converter.snakecase': '蛇形命名法',
  'case-converter.snakecase-desc': '将文本转换为蛇形命名法',
  'case-converter.kebabcase': '短横线命名法',
  'case-converter.kebabcase-desc': '将文本转换为短横线命名法',
  'case-converter.dotcase': '点命名法',
  'case-converter.dotcase-desc': '将文本转换为点命名法',
  'case-converter.pathcase': '路径命名法',
  'case-converter.pathcase-desc': '将文本转换为路径命名法',
  'case-converter.headlinetitlecase': '标题大小写',
  'case-converter.headlinetitlecase-desc': '将文本转换为标题大小写',
  'case-converter.sentencetitlecase': '句子标题大小写',
  'case-converter.sentencetitlecase-desc': '将文本转换为句子标题大小写',
  'case-converter.apatitlecase': 'APA标题大小写',
  'case-converter.apatitlecase-desc': '将文本转换为APA标题大小写',
  'case-converter.humanize': '人性化',
  'case-converter.humanize-desc': '将文本转换为更人性化的格式',
  'case-converter.slugify': 'URL友好',
  'case-converter.slugify-desc': '将文本转换为URL友好的格式',
  'case-converter.lowercasefirst': '首字母小写',
  'case-converter.lowercasefirst-desc': '将第一个字母转换为小写',
  'case-converter.acronymuppercase': '首字母缩写大写',
  'case-converter.acronymuppercase-desc': '将首字母缩写转换为大写',
  'case-converter.invertcase': '反转大小写',
  'case-converter.invertcase-desc': '反转文本的大小写',
  'case-converter.alternatingcase': '交替大小写',
  'case-converter.alternatingcase-desc': '将文本转换为交替大小写',
  'case-converter.alternatingcaselower': '交替小写',
  'case-converter.alternatingcaselower-desc': '将文本转换为交替小写',
  'case-converter.features.instant-conversion': '即时转换',
  'case-converter.features.instant-conversion-desc': '输入时即可实时看到转换结果',
  'case-converter.features.privacy-first': '隐私优先',
  'case-converter.features.privacy-first-desc':
    '所有处理都在您的浏览器中完成 — 不会向服务器发送任何数据',
  'case-converter.features.completely-free': '完全免费',
  'case-converter.features.completely-free-desc': '无限制使用，无需注册',
  'action.clear': '清除',
  'action.copy': '复制',
  'action.input-placeholder': '在此输入您的文本...',
  'action.output-placeholder': '结果将在此显示...',
  'home.hero.title': '免费在线文本 ',
  'home.hero.subtitle': '转换器和格式化器',
  'home.hero.description':
    '使用强大的转换工具转换您的文本：大小写更改、格式化、编码和SEO友好的生成器。所有工具都是免费的，可在您的浏览器中即时工作。',
  'home.features.title': '强大的文本转换工具',
  'home.cta.title': '准备转换您的文本？',
  'home.cta.description': '加入数千名信任Text Converter进行文本转换需求的用户。',
  'home.button.learn-more': '了解更多',
  'feature.case-conversion.title': '大小写转换',
  'feature.case-conversion.description': '将文本转换为大写、小写、标题大小写等',
  'feature.text-formatting.title': '文本格式化',
  'feature.text-formatting.description': '使用适当的间距、换行和结构格式化文本',
  'feature.encoding-tools.title': '编码工具',
  'feature.encoding-tools.description': '以各种格式编码和解码文本。',
  'feature.seo-tools.title': 'SEO工具',
  'feature.seo-tools.description': '生成SEO友好的slug和元描述。',
  'footer.title': '文本转换器',
  'footer.description': '免费的在线文本转换和格式化工具。',
  'footer.copyright': '© 2025 文本转换器。保留所有权利。',
  'footer.follow-us': '关注我们',
  'footer.social-description': '在社交媒体上关注我们，了解最新更新。',
  'language.current': '中文',
  'language.select': '选择语言',
  'language.english': 'English',
  'language.spanish': 'Español',
  'language.french': 'Français',
  'language.chinese': '中文',
  'language.hindi': 'हिन्दी',
  'language.arabic': 'العربية',
  'language.bengali': 'বাংলা',
  'language.portuguese': 'Português',
  'language.russian': 'Русский',
  'text-statistics.characters': '字符',
  'text-statistics.no-spaces': '无空格',
  'text-statistics.words': '单词',
  'text-statistics.sentences': '句子',
  'text-statistics.avg-word': '平均单词',
  'text-statistics.avg-sentence': '平均句子',
  'text-statistics.paragraphs': '段落',
  'text-statistics.lines': '行',
  'text-statistics.min-read': '分钟阅读',
  'text-statistics.min-speak': '分钟说话',
  'common.input-text': '输入文本',
  'common.output-text': '输出文本',
  'common.copy': '复制',
  'common.clear': '清除',
  'common.convert': '转换',
  'common.format': '格式化',
  'common.analyze': '分析',
  'common.generate': '生成',
  'common.loading': '加载中...',
  'common.error': '错误',
  'common.success': '成功',
  'common.select-option': '选择选项...',
  'text-generator.title': '文本生成器',
  'text-generator.description': '生成各种类型的文本内容，包括Lorem Ipsum、随机文本、UUID等',
  'text-generator.utility-type': '文本生成工具',
  'text-generator.input-label': '输入文本',
  'text-generator.output-label': '生成的文本',
  'text-generator.clear-button': '清除',
  'text-generator.copy-button': '复制',
  'text-generator.input-placeholder': '在此输入您的文本...',
  'text-generator.output-placeholder': '生成的文本将在此显示...',
  'text-generator.available-tools': '可用工具',
  'text-generator.type': '类型',
  'text-generator.count': '数量',
  'text-generator.words': '单词',
  'text-generator.sentences': '句子',
  'text-generator.paragraphs': '段落',
  'text-generator.result': '结果',
  'text-generator.copy': '复制',
  'text-generator.lorem-ipsum': 'Lorem Ipsum',
  'text-generator.lorem-ipsum-desc': '生成Lorem Ipsum占位符文本',
  'text-generator.random-text': '随机文本',
  'text-generator.uuid-generator': 'UUID生成器',
  'text-generator.extract-emails': '提取邮箱',
  'text-generator.extract-urls': '提取URL',
  'text-generator.extract-phones': '提取电话',
  'text-generator.mask-emails': '掩码邮箱',
  'text-generator.mask-phones': '掩码电话',
  'text-generator.mask-credit-cards': '掩码信用卡',
  'text-generator.feature.lorem-ipsum': 'Lorem Ipsum生成器',
  'text-generator.feature.lorem-ipsum-desc': '生成标准的Lorem Ipsum占位符文本',
  'text-generator.feature.random-text': '随机文本生成器',
  'text-generator.feature.random-text-desc': '生成随机文本内容',
  'text-generator.feature.uuid-generator': 'UUID生成器',
  'text-generator.feature.uuid-generator-desc': '生成唯一标识符',
  'text-generator.feature.data-extractors': '数据提取器',
  'text-generator.feature.data-extractors-desc': '从文本中提取特定类型的数据',
  'text-generator.feature.privacy-maskers': '隐私掩码器',
  'text-generator.feature.privacy-maskers-desc': '掩码敏感信息以保护隐私',
  'text-generator.tool-name': '文本生成器',
  'text-generator.faq-title': '常见问题',
  'text-generator.faq-subtitle': '关于文本生成器的常见问题',
  'text-generator.faq1-question': '如何在线生成Lorem Ipsum文本？',
  'text-generator.faq1-answer':
    '要在线生成Lorem Ipsum文本，请使用我们的免费文本生成器工具。选择"Lorem Ipsum"，指定长度，即可获得即时占位符文本。非常适合设计模型、开发测试和内容布局。无需注册。',
  'text-generator.faq2-question': '我可以为测试应用程序生成随机文本吗？',
  'text-generator.faq2-answer':
    '是的！我们的工具为测试应用程序和内容布局生成随机文本、句子和段落。非常适合开发者、设计师和内容创作者。为表单、数据库和用户界面生成真实的测试数据。',
  'text-generator.faq3-question': '如何为我的应用程序生成UUID？',
  'text-generator.faq3-answer':
    '使用我们的文本生成器为数据库记录和API端点创建各种格式（UUID v1、v4）的唯一标识符。对于使用分布式系统、数据库和唯一ID生成的开发者来说至关重要。',
  'text-generator.faq4-question': '如何从文本中提取电子邮件和URL？',
  'text-generator.faq4-answer':
    '我们的工具自动从任何文本内容中提取电子邮件地址、URL和电话号码。非常适合数据分析、联系人提取和内容处理。与我们的文本分析器结合使用，进行全面的文本处理。',
  'text-generator.faq5-question': '如何在文本中屏蔽敏感信息？',
  'text-generator.faq5-answer':
    '使用我们的数据屏蔽功能隐藏敏感信息，如电子邮件、电话号码和信用卡号码。在保持文本结构的同时保护隐私的完美选择。对于数据匿名化和隐私合规至关重要。',
  'text-generator.faq6-question': '我可以为开发生成测试数据吗？',
  'text-generator.faq6-answer':
    '是的！我们的文本生成器创建真实的测试数据，包括姓名、地址和其他应用程序测试信息。非常适合开发者、QA团队和数据库管理员。为开发和测试环境生成一致的测试数据。',
  'text-analyzer.title': '文本分析器',
  'text-analyzer.description': '分析和处理文本，包括查找/替换、频率分析等',
  'text-analyzer.utility-type': '文本分析工具',
  'text-analyzer.input-label': '输入文本',
  'text-analyzer.output-label': '分析结果',
  'text-analyzer.input-placeholder': '在此输入您的文本...',
  'text-analyzer.output-placeholder': '结果将在此显示...',
  'text-analyzer.clear-button': '清除',
  'text-analyzer.copy-button': '复制',
  'text-analyzer.features-title': '功能',
  'text-analyzer.find-placeholder': '查找文本...',
  'text-analyzer.replace-placeholder': '替换为...',
  'text-analyzer.find-text': '查找文本',
  'text-analyzer.replace-with': '替换为',
  'text-analyzer.use-regex': '使用正则表达式',
  'text-analyzer.case-sensitive': '区分大小写',
  'text-analyzer.global-replace': '全局替换',
  'text-analyzer.multiline': '多行模式',
  'text-analyzer.feature.find-replace': '查找替换',
  'text-analyzer.feature.find-replace-desc': '在文本中查找并替换内容',
  'text-analyzer.feature.find-matches': '查找匹配',
  'text-analyzer.feature.find-matches-desc': '查找文本中的匹配项',
  'text-analyzer.feature.remove-punctuation': '移除标点',
  'text-analyzer.feature.remove-punctuation-desc': '从文本中移除标点符号',
  'text-analyzer.feature.remove-numbers': '移除数字',
  'text-analyzer.feature.remove-numbers-desc': '从文本中移除数字',
  'text-analyzer.feature.keep-numbers-only': '仅保留数字',
  'text-analyzer.feature.keep-numbers-only-desc': '仅保留文本中的数字',
  'text-analyzer.feature.remove-duplicate-words': '移除重复单词',
  'text-analyzer.feature.remove-duplicate-words-desc': '移除文本中的重复单词',
  'text-analyzer.feature.word-frequency': '单词频率',
  'text-analyzer.feature.word-frequency-desc': '分析单词在文本中的频率',
  'text-analyzer.feature.char-frequency': '字符频率',
  'text-analyzer.feature.char-frequency-desc': '分析字符在文本中的频率',
  'encode-decode.title': '编码/解码',
  'encode-decode.description': '以各种格式编码和解码文本，包括URL、Base64、HTML等',
  'encode-decode.utility-type': '编码解码工具',
  'encode-decode.input-label': '输入文本',
  'encode-decode.output-label': '编码/解码结果',
  'encode-decode.clear-button': '清除',
  'encode-decode.copy-button': '复制',
  'encode-decode.input-placeholder': '在此输入您的文本...',
  'encode-decode.output-placeholder': '编码/解码结果将在此显示...',
  'encode-decode.features-title': '功能',
  'encode-decode.examples-title': '示例',
  'encode-decode.quick-tips': '快速提示',
  'encode-decode.tip-url': 'URL编码用于在URL中安全传输特殊字符',
  'encode-decode.tip-base64': 'Base64编码用于在文本中传输二进制数据',
  'encode-decode.tip-html': 'HTML转义用于在HTML中显示特殊字符',
  'encode-decode.tip-unicode':
    'Unicode normalization is used to handle different character encodings',
  'encode-decode.url-encode': 'URL编码',
  'encode-decode.url-encode-desc': '将文本编码为URL安全格式',
  'encode-decode.url-decode': 'URL解码',
  'encode-decode.base64-encode': 'Base64编码',
  'encode-decode.base64-decode': 'Base64解码',
  'encode-decode.html-escape': 'HTML转义',
  'encode-decode.html-unescape': 'HTML反转义',
  'encode-decode.json-escape': 'JSON转义',
  'encode-decode.json-unescape': 'JSON反转义',
  'encode-decode.html-to-text': 'HTML转文本',
  'encode-decode.ascii-transliterate': 'ASCII音译',
  'encode-decode.smart-quotes': '智能引号',
  'encode-decode.unicode-nfc': 'Unicode NFC',
  'encode-decode.unicode-nfd': 'Unicode NFD',
  'encode-decode.feature.url-encode-decode': 'URL编码/解码',
  'encode-decode.feature.url-encode-decode-desc': '编码和解码URL安全格式',
  'encode-decode.feature.base64-encode-decode': 'Base64编码/解码',
  'encode-decode.feature.base64-encode-decode-desc': '编码和解码Base64格式',
  'encode-decode.feature.html-escape-unescape': 'HTML转义/反转义',
  'encode-decode.feature.html-escape-unescape-desc': '转义和反转义HTML字符',
  'encode-decode.feature.json-escape-unescape': 'JSON转义/反转义',
  'encode-decode.feature.json-escape-unescape-desc': '转义和反转义JSON字符',
  'encode-decode.feature.html-to-text': 'HTML转文本',
  'encode-decode.feature.html-to-text-desc': '将HTML转换为纯文本',
  'encode-decode.feature.ascii-transliterate': 'ASCII音译',
  'encode-decode.feature.ascii-transliterate-desc': '将Unicode字符转换为ASCII',
  'encode-decode.feature.smart-quotes': '智能引号',
  'encode-decode.feature.smart-quotes-desc': '转换智能引号字符',
  'encode-decode.feature.unicode-nfc': 'Unicode NFC',
  'encode-decode.feature.unicode-nfc-desc': 'Unicode规范化形式C',
  'encode-decode.feature.unicode-nfd': 'Unicode NFD',
  'encode-decode.feature.unicode-nfd-desc': 'Unicode规范化形式D',
  'encode-decode.examples-web-dev': 'Web开发示例',
  'encode-decode.examples-web-dev-1': 'URL编码用于查询参数',
  'encode-decode.examples-web-dev-2': 'Base64编码用于数据URI',
  'encode-decode.examples-web-dev-3': 'HTML转义用于XSS防护',
  'encode-decode.examples-web-dev-4': 'JSON转义用于API数据',
  'encode-decode.examples-data-processing': '数据处理示例',
  'encode-decode.examples-data-processing-1': 'Unicode标准化用于文本比较',
  'encode-decode.examples-data-processing-2': 'ASCII音译用于搜索',
  'encode-decode.examples-data-processing-3': '智能引号用于文档处理',
  'encode-decode.examples-data-processing-4': 'HTML转文本用于内容提取',
  'text-formatter.title': '文本格式化器',
  'text-formatter.description': '格式化文本，包括修剪空白、缩进、行尾等',
  'text-formatter.utility-type': '文本格式化工具',
  'text-formatter.input-label': '输入文本',
  'text-formatter.output-label': '格式化结果',
  'text-formatter.clear-button': '清除',
  'text-formatter.copy-button': '复制',
  'text-formatter.input-placeholder': '在此输入您的文本...',
  'text-formatter.output-placeholder': '格式化结果将在此显示...',
  'text-formatter.formatting-type': '格式化类型',
  'text-formatter.tab-size': '制表符大小',
  'text-formatter.tab-size-description': '设置制表符的空格数',
  'text-formatter.features-title': '功能',
  'text-formatter.trim': '修剪空白',
  'text-formatter.trim-desc': '移除文本开头和结尾的空白字符',
  'text-formatter.collapse': '压缩空白',
  'text-formatter.collapse-desc': '将多个连续空格替换为单个空格',
  'text-formatter.remove-line-breaks': '移除换行符',
  'text-formatter.remove-line-breaks-desc': '移除所有换行符并标准化空格',
  'text-formatter.normalize-line-endings': '标准化行结束符',
  'text-formatter.normalize-line-endings-desc': '将行结束符转换为Unix格式（LF）',
  'text-formatter.normalize-line-endings-crlf': '标准化为CRLF',
  'text-formatter.normalize-line-endings-crlf-desc':
    'Convert line endings to Windows format (CRLF)',
  'text-formatter.indent': '缩进',
  'text-formatter.indent-desc': '为所有行添加缩进',
  'text-formatter.unindent': '取消缩进',
  'text-formatter.unindent-desc': '从所有行中移除公共缩进',
  'text-formatter.tabs-to-spaces': '制表符转空格',
  'text-formatter.tabs-to-spaces-desc': '将制表符转换为空格',
  'text-formatter.spaces-to-tabs': '空格转制表符',
  'text-formatter.spaces-to-tabs-desc': '将空格转换为制表符',
  'text-formatter.feature.trim-whitespace': '修剪空白',
  'text-formatter.feature.trim-whitespace-desc': '移除文本开头和结尾的空白字符',
  'text-formatter.feature.collapse-spaces': '压缩空白',
  'text-formatter.feature.collapse-spaces-desc':
    'Collapse multiple consecutive spaces to single space',
  'text-formatter.feature.remove-line-breaks': '移除换行符',
  'text-formatter.feature.remove-line-breaks-desc': '从文本中移除所有换行符',
  'text-formatter.feature.normalize-line-endings': '标准化行结束符',
  'text-formatter.feature.normalize-line-endings-desc':
    'Normalize line endings to consistent format',
  'text-formatter.feature.indent-lines': '缩进行',
  'text-formatter.feature.indent-lines-desc': '为文本行添加缩进',
  'text-formatter.feature.unindent-lines': '取消缩进行',
  'text-formatter.feature.unindent-lines-desc': '从文本行中移除缩进',
  'text-formatter.feature.tabs-to-spaces': '制表符转空格',
  'text-formatter.feature.tabs-to-spaces-desc': '将制表符转换为空格',
  'text-formatter.feature.spaces-to-tabs': '空格转制表符',
  'text-formatter.feature.spaces-to-tabs-desc': '将空格转换为制表符',
  'text-formatter.tool-name': '文本格式化器',
  'text-formatter.faq-title': '常见问题',
  'text-formatter.faq-subtitle': '关于文本格式化器的常见问题',
  'text-analyzer.tool-name': '文本分析器',
  'text-analyzer.faq-title': '常见问题',
  'text-analyzer.faq-subtitle': '关于文本分析器的常见问题',
  'text-analyzer.faq1-question': '文本分析工具的准确性如何？',
  'text-analyzer.faq1-answer':
    '我们的文本分析器提供高度准确的分析，包括字数、字符数、句子数和高级统计。非常适合内容创作者、研究人员和数据分析师。通过详细的指标和频率分析，即时了解您的文本。',
  'text-analyzer.faq2-question': '我可以使用正则表达式查找和替换文本吗？',
  'text-analyzer.faq2-answer':
    '是的！我们的文本分析器支持强大的正则表达式查找和替换功能，用于高级文本操作。使用复杂的模式来查找、替换或提取特定的文本模式。对于数据处理、内容编辑和文本转换至关重要。尝试我们的<a href="/text-formatter" title="文本格式化器">文本格式化器</a>进行额外格式化。',
  'text-analyzer.faq3-question': '如何分析文本中的词频？',
  'text-analyzer.faq3-answer':
    '我们的工具自动分析词频并显示最常见的单词及其计数。非常适合SEO分析、内容优化和理解文本模式。获得关键词密度、内容结构和写作风格的洞察。',
  'text-analyzer.faq4-question': '如何从文本中删除标点符号或数字？',
  'text-analyzer.faq4-answer':
    '使用我们的文本分析器立即从您的文本中删除标点符号、数字或两者。非常适合数据清理、文本预处理和内容分析。对于准备文本进行进一步处理或分析至关重要。',
  'text-analyzer.faq5-question': '分析器提供哪些文本统计？',
  'text-analyzer.faq5-answer':
    '我们提供全面的统计，包括字数、字符数、句子数、段落数、阅读时间和关键词密度分析。获得关于您的内容结构、可读性和组成的详细洞察。非常适合内容优化和分析。',
  'text-analyzer.faq6-question': '如何从文本中提取特定模式？',
  'text-analyzer.faq6-answer':
    '使用我们的正则表达式功能从您的文本中提取电子邮件、URL、电话号码或任何自定义模式。非常适合数据提取、内容分析和信息收集。与我们的<a href="/text-generator" title="文本生成器">文本生成器</a>结合使用，用于数据处理工作流程。',
  'case-converter.tool-name': '大小写转换器',
  'line-tools.tool-name': '列表工具',
  'text-formatter.faq1-question': '如何在线删除文本中的多余空格？',
  'text-formatter.faq1-answer':
    '要在线删除文本中的多余空格，请使用我们的免费<a href="/text-formatter" title="文本格式化器">文本格式化器</a>工具。选择"折叠空格"来删除多个空格并用单个空格替换。非常适合清理复制的文本、文档和代码。在您的浏览器中即时工作。',
  'text-formatter.faq2-question': '什么是文本规范化，为什么需要它？',
  'text-formatter.faq2-answer':
    '文本规范化通过删除多余的空白字符、规范化行尾和清理格式不一致来标准化文本格式。这对于数据处理、代码格式化和文档准备至关重要。我们的<a href="/text-analyzer" title="文本分析器">文本分析器</a>可以帮助分析结果。',
  'text-formatter.faq3-question': '我可以为不同的编程语言格式化文本吗？',
  'text-formatter.faq3-answer':
    '是的！我们的文本格式化器包含不同编程语言的选项，并处理各种缩进样式。在制表符和空格之间转换，规范化行尾，并为Python、JavaScript、Java等格式化代码。尝试我们的案例转换器进行变量命名。',
  'text-formatter.faq4-question': '如何修复文本中不一致的换行符？',
  'text-formatter.faq4-answer':
    '使用我们的文本格式化器立即规范化换行符。在Windows (CRLF)、Unix (LF)或Mac (CR)换行符样式之间选择，或删除所有换行符。对于跨平台兼容性和代码格式化至关重要。',
  'text-formatter.faq5-question': '编程中制表符和空格有什么区别？',
  'text-formatter.faq5-answer':
    '制表符是表示多个空格的单个字符，而空格是单个字符。我们的工具在制表符和空格之间转换，同时保持一致的缩进。对于编程项目中的代码可读性和团队协作至关重要。',
  'text-formatter.faq6-question': '如何修剪文本中的空白字符？',
  'text-formatter.faq6-answer':
    '我们的文本格式化器立即删除前导和尾随空白字符。非常适合清理从网站、文档和电子表格复制的文本。也尝试我们的列表工具来处理逐行数据。',
  'text-formatter.faq7-question': '如何格式化文本以提高可读性？',
  'text-formatter.faq7-answer':
    '我们的文本格式化器通过添加适当的间距、规范化标点符号和格式化文本以在设备间实现最佳显示来提高可读性。对于内容创建、文档准备和数据演示至关重要。',
  'line-tools.title': '行工具',
  'line-tools.description': '处理文本行包括排序、去重、编号等',
  'line-tools.utility-type': '行处理工具',
  'line-tools.input-label': '输入文本',
  'line-tools.output-label': '处理结果',
  'line-tools.clear-button': '清除',
  'line-tools.copy-button': '复制',
  'line-tools.input-placeholder': '在此输入您的文本...',
  'line-tools.output-placeholder': '处理结果将在此显示...',
  'line-tools.features-title': '功能',
  'line-tools.sort': '排序',
  'line-tools.sort-desc': '按字母顺序排序文本行',
  'line-tools.remove-duplicates': '移除重复',
  'line-tools.remove-empty': '移除空行',
  'line-tools.number-lines': '编号行',
  'line-tools.remove-numbers': '移除编号',
  'line-tools.reverse': '反转',
  'line-tools.shuffle': '打乱',
  'line-tools.join': '连接',
  'line-tools.split': '分割',
  'line-tools.sort-order': '排序顺序',
  'line-tools.ascending': '升序',
  'line-tools.descending': '降序',
  'line-tools.case-sensitive': '区分大小写',
  'line-tools.feature.sort-lines': '排序行',
  'line-tools.feature.sort-lines-desc': '按字母顺序排序文本行',
  'line-tools.feature.remove-duplicate-lines': '移除重复行',
  'line-tools.feature.remove-duplicate-lines-desc': '从文本中移除重复的行',
  'line-tools.feature.remove-empty-lines': '移除空行',
  'line-tools.feature.remove-empty-lines-desc': '从文本中移除空行',
  'line-tools.feature.number-lines': '编号行',
  'line-tools.feature.number-lines-desc': '为文本行添加行号',
  'line-tools.feature.remove-line-numbers': '移除行号',
  'line-tools.feature.remove-line-numbers-desc': '从文本中移除行号',
  'line-tools.feature.reverse-lines': '反转行',
  'line-tools.feature.reverse-lines-desc': '反转文本行的顺序',
  'line-tools.feature.shuffle-lines': '打乱行',
  'line-tools.feature.shuffle-lines-desc': '随机打乱文本行的顺序',
  'line-tools.feature.join-lines': '连接行',
  'line-tools.feature.join-lines-desc': '将多行文本连接为单行',
  'line-tools.feature.split-text': '分割文本',
  'line-tools.feature.split-text-desc': '将文本分割为多行',
  'line-tools.faq-title': '常见问题',
  'line-tools.faq-subtitle': '关于行工具的常见问题',
  'line-tools.faq1-question': '如何在线按字母顺序排序行？',
  'line-tools.faq1-answer':
    '要在线按字母顺序排序行，请使用我们免费的行工具。选择"排序行"将您的文本行按字母顺序（升序或降序）排列。非常适合组织列表、数据和文本内容。在您的浏览器中即时工作。',
  'line-tools.faq2-question': '如何从文本中删除重复行？',
  'line-tools.faq2-answer':
    '使用我们的"删除重复项"功能来消除重复行，同时保留唯一行的原始顺序。对于数据清理、列表处理和内容去重至关重要。非常适合处理大型数据集、文本文件和电子邮件列表。与任何文本内容即时工作。',
  'line-tools.faq3-question': '如何在我的文本中给行编号？',
  'line-tools.faq3-answer':
    '我们的行工具可以自动为您的文本行添加连续编号。非常适合创建编号列表、引用特定行和组织内容。对于文档、数据处理和内容组织至关重要。与任何文本内容一起工作。',
  'line-tools.faq4-question': '如何反转行的顺序？',
  'line-tools.faq4-answer':
    '使用"反转行"立即翻转文本行的顺序。非常适合按反向时间顺序处理数据、创建反向列表和数据操作。对于数据分析、内容处理和列表组织至关重要。与任何文本内容一起工作。',
  'line-tools.faq5-question': '如何随机打乱行？',
  'line-tools.faq5-answer':
    '使用"打乱行"立即随机化文本行的顺序。非常适合创建随机列表、数据随机化和内容打乱。对于数据分析、测试和内容组织至关重要。与任何文本内容一起工作。',
  'line-tools.faq6-question': '我可以根据特定条件过滤行吗？',
  'line-tools.faq6-answer':
    '是的！我们的行工具可以过滤包含特定文本、匹配模式或满足某些条件的行。非常适合数据过滤、内容分析和文本处理。对于数据科学家、开发人员和内容经理至关重要。',
  'json-parser.related-guides': '相关 JSON 指南',
  'json-parser.related-guides-desc':
    'Explore our comprehensive guides to master JSON formatting, validation, and performance optimization.',
  'json-utility.related-guides': '相关JSON指南',
  'json-utility.related-guides-desc': '探索我们的综合指南，掌握JSON格式化、验证和性能优化。',
  'xml.formatter.title': 'XML格式化器和美化器',
  'xml.formatter.description':
    '格式化、验证、压缩和美化XML文档。将XML转换为HTML/JSON，分析XML结构，并修复XML格式问题。',
  'xml.formatter.input.title': 'XML输入',
  'xml.formatter.input.label': '输入您的XML代码',
  'xml.formatter.options.indent': '缩进大小',
  'xml.formatter.options.preserve': '保留空白',
  'xml.formatter.actions.format': '格式化XML',
  'xml.formatter.actions.sample': '加载示例',
  'xml.formatter.actions.clear': '清除全部',
  'xml.formatter.actions.copy': '复制',
  'xml.formatter.output.formatted': '格式化的XML',
  'xml.formatter.output.minified': '压缩的XML',
  'xml.formatter.conversion.title': '转换XML',
  'xml.formatter.conversion.toHtml': '转换为HTML',
  'xml.formatter.conversion.toJson': '转换为JSON',
  'xml.formatter.stats.title': 'XML统计',
  'xml.formatter.stats.elements': '元素',
  'xml.formatter.stats.attributes': '属性',
  'xml.formatter.stats.depth': '最大深度',
  'xml.formatter.stats.textNodes': '文本节点',
  'xml.formatter.stats.comments': '注释',
  'xml.formatter.stats.size': '大小（字节）',
  'xml.formatter.features.title': 'XML格式化器功能',
  'xml.formatter.features.beautify.title': 'XML美化器',
  'xml.formatter.features.beautify.description':
    'Format and beautify XML with proper indentation and structure.',
  'xml.formatter.features.validate.title': 'XML验证器',
  'xml.formatter.features.validate.description':
    'Validate XML syntax and structure with detailed error reporting.',
  'xml.formatter.features.analyze.title': 'XML分析',
  'xml.formatter.features.analyze.description':
    'Analyze XML structure, count elements, attributes, and depth.',
  'xml.formatter.features.convert.title': 'XML转换器',
  'xml.formatter.features.convert.description': '将XML转换为HTML、JSON和其他格式。',
  'xml.formatter.features.minify.title': 'XML压缩器',
  'xml.formatter.features.minify.description':
    'Minify XML by removing unnecessary whitespace and formatting.',
  'xml.formatter.features.tools.title': 'XML工具',
  'xml.formatter.features.tools.description':
    'Comprehensive XML toolkit with formatting, validation, and conversion tools.',
  'xml.formatter.faq.title': '常见问题',
  'xml.formatter.faq1.question': '什么是XML格式化，为什么它很重要？',
  'xml.formatter.faq1.answer':
    'XML formatting involves organizing XML code with proper indentation, line breaks, and structure to improve readability and maintainability. Well-formatted XML is easier to read, debug, and collaborate on, making it essential for professional development.',
  'xml.formatter.faq2.question': '这个工具可以验证XML语法吗？',
  'xml.formatter.faq2.answer':
    'Yes! Our XML formatter includes built-in validation that checks for syntax errors, malformed tags, and structural issues. It provides detailed error messages with line numbers to help you quickly identify and fix problems.',
  'xml.formatter.faq3.question':
    'Does the formatter preserve XML comments and processing instructions?',
  'xml.formatter.faq3.answer':
    'Absolutely! Our formatter preserves all XML elements including comments, processing instructions, CDATA sections, and DOCTYPE declarations. You can choose to keep or remove comments based on your preferences.',
  'xml.formatter.faq4.question': 'Can I convert XML to other formats like HTML or JSON?',
  'xml.formatter.faq4.answer':
    'Yes! Our XML formatter includes conversion tools that can transform XML into HTML, JSON, and other formats. This is particularly useful for data migration, API integration, and cross-platform compatibility.',
  'xml.formatter.faq5.question': 'XML文件大小有限制吗？',
  'xml.formatter.faq5.answer':
    'Our formatter can handle large XML files efficiently. While there are practical limits for browser processing, most standard XML documents (up to several MB) can be formatted without issues. For very large files, consider processing in chunks.',
  'xml.formatter.blog.learn-more': '了解更多关于XML格式化的信息：',
  'xml.formatter.blog.guide-title': 'XML Best Practices Guide',
  'js-formatter.title': 'JavaScript格式化器和美化器',
  'js-formatter.description':
    'Format, beautify, minify, and validate JavaScript code online. Free JS formatter with syntax highlighting, error detection, and ES6 conversion.',
  'js-formatter.input': 'JavaScript输入',
  'js-formatter.output': 'JavaScript输出',
  'js-formatter.load-sample': '加载示例',
  'js-formatter.clear': '清除全部',
  'js-formatter.copy': '复制',
  'js-formatter.process': '处理',
  'js-formatter.formatted': '已格式化',
  'js-formatter.minified': '已压缩',
  'js-formatter.stats': '统计',
  'js-formatter.validate': '验证',
  'js-formatter.convert': '转换为ES6',
  'js-formatter.format-options': '格式化选项',
  'js-formatter.indent-size': '缩进大小',
  'js-formatter.use-tabs': '使用制表符',
  'js-formatter.preserve-comments': '保留注释',
  'js-formatter.add-semicolons': '添加分号',
  'js-formatter.fix-indentation': '修复缩进',
  'js-formatter.syntax-error': 'JavaScript语法错误',
  'js-formatter.features-title': 'JavaScript格式化器功能',
  'js-formatter.feature-formatting': '代码格式化',
  'js-formatter.feature-formatting-desc':
    'Format JavaScript code with proper indentation, spacing, and structure for better readability.',
  'js-formatter.feature-validation': '语法验证',
  'js-formatter.feature-validation-desc':
    'Validate JavaScript syntax and detect errors with detailed error messages and line numbers.',
  'js-formatter.feature-minification': '代码压缩',
  'js-formatter.feature-minification-desc':
    'Minify JavaScript code by removing whitespace, comments, and unnecessary characters to reduce file size.',
  'js-formatter.feature-stats': '代码统计',
  'js-formatter.feature-stats-desc':
    'Analyze JavaScript code with detailed statistics including lines, functions, variables, and complexity metrics.',
  'js-formatter.feature-conversion': 'ES6转换',
  'js-formatter.feature-conversion-desc':
    'Convert legacy JavaScript code to modern ES6+ syntax with arrow functions, const/let, and template literals.',
  'js-formatter.feature-customization': '可自定义选项',
  'js-formatter.feature-customization-desc':
    'Customize formatting options including indent size, tab usage, comment preservation, and semicolon handling.',
  'js-formatter.faq-title': '常见问题',
  'js-formatter.faq1-question': '什么是JavaScript格式化，为什么需要它？',
  'js-formatter.faq1-answer':
    "JavaScript formatting makes your code more readable by adding proper indentation, spacing, and structure. It's essential for debugging, maintenance, and collaboration on JavaScript projects.",
  'js-formatter.faq2-question': '如何验证JavaScript语法？',
  'js-formatter.faq2-answer':
    'Our JavaScript formatter automatically validates JavaScript syntax and structure. It checks for proper syntax, missing semicolons, and common JavaScript errors with detailed error messages.',
  'js-formatter.faq3-question': '什么是JavaScript压缩？',
  'js-formatter.faq3-answer':
    "JavaScript minification removes unnecessary whitespace, comments, and formatting to reduce file size. It's useful for production environments where file size and loading speed matter.",
  'js-formatter.faq4-question': '我可以将旧版JavaScript转换为ES6+吗？',
  'js-formatter.faq4-answer':
    'Yes! Our JavaScript formatter includes conversion tools to transform legacy JavaScript code into modern ES6+ syntax, including arrow functions, const/let declarations, and template literals.',
  'js-formatter.faq5-question': '什么是JavaScript美化？',
  'js-formatter.faq5-answer':
    'JavaScript beautification formats JavaScript code with proper indentation, line breaks, and structure to improve readability and maintainability.',
  'js-formatter.faq6-question': '如何处理包含特殊字符的JavaScript？',
  'js-formatter.faq6-answer':
    'Our tool automatically handles JavaScript escape sequences and special characters, ensuring proper encoding and preventing parsing errors.',
  'js-formatter.faq7-question': '我可以格式化大型JavaScript文件吗？',
  'js-formatter.faq7-answer':
    'Yes! Our JavaScript formatter can handle large JavaScript files efficiently, with options for both formatting and minification.',
  'js-formatter.faq8-question': 'JavaScript与其他语言的区别是什么？',
  'js-formatter.faq8-answer':
    'JavaScript is a dynamic, interpreted programming language primarily used for web development. It has unique features like prototypal inheritance and dynamic typing.',
  'js-formatter.faq9-question': '如何修复格式错误的JavaScript？',
  'js-formatter.faq9-answer':
    'Our JavaScript formatter identifies and highlights syntax errors, making it easy to locate and fix issues in your JavaScript code.',
  'js-formatter.faq10-question': '我可以自定义格式化选项吗？',
  'js-formatter.faq10-answer':
    'Yes! You can customize indent size, use tabs or spaces, preserve comments, add semicolons, and choose from various formatting preferences.',
  'js-formatter.blog-link-text':
    'Learn more about JavaScript formatting in our comprehensive guide:',
  'js-formatter.blog-link-title': 'JavaScript格式化器指南',
  'html-formatter.title': 'HTML格式化器和美化器',
  'html-formatter.description':
    'Format, beautify, minify, and validate HTML code online. Free HTML formatter with syntax highlighting, error detection, and XHTML conversion.',
  'html-formatter.tab-formatted': '格式化',
  'html-formatter.tab-minified': '压缩',
  'html-formatter.tab-stats': '统计',
  'html-formatter.tab-validate': '验证',
  'html-formatter.tab-convert': '转换为XHTML',
  'html-formatter.options-title': '格式化选项',
  'html-formatter.option-indent-size': '缩进大小',
  'html-formatter.option-use-tabs': '使用制表符',
  'html-formatter.option-preserve-comments': '保留注释',
  'html-formatter.option-sort-attributes': '排序属性',
  'html-formatter.option-remove-empty-attributes': '删除空属性',
  'html-formatter.option-fix-indentation': '修复缩进',
  'html-formatter.input-title': 'HTML输入',
  'html-formatter.output-title': 'HTML输出',
  'html-formatter.load-sample': '加载示例',
  'html-formatter.clear': '清除全部',
  'html-formatter.process': '处理',
  'html-formatter.copy': '复制',
  'html-formatter.blog-link-text': '了解更多关于HTML格式化的信息：',
  'html-formatter.blog-link-title': '完整HTML格式化器指南',
  'html-formatter.download': '下载',
  'html-formatter.validation-error': 'HTML验证错误',
  'html-formatter.stats-title': 'HTML统计',
  'html-formatter.stats-lines': '行数',
  'html-formatter.stats-characters': '字符数',
  'html-formatter.stats-words': '单词数',
  'html-formatter.stats-tags': '标签数',
  'html-formatter.stats-attributes': '属性数',
  'html-formatter.stats-comments': '注释数',
  'html-formatter.stats-links': '链接数',
  'html-formatter.stats-images': '图片数',
  'html-formatter.stats-forms': '表单数',
  'html-formatter.stats-size': '大小',
  'html-formatter.features-title': '强大的HTML工具',
  'html-formatter.feature-formatting': 'HTML格式化',
  'html-formatter.feature-formatting-desc':
    'Beautify and format HTML code with proper indentation and structure.',
  'html-formatter.feature-validation': 'HTML验证',
  'html-formatter.feature-validation-desc':
    'Validate HTML syntax and detect errors with detailed feedback.',
  'html-formatter.feature-minification': 'HTML压缩',
  'html-formatter.feature-minification-desc':
    'Minify HTML code to reduce file size and improve loading speed.',
  'html-formatter.feature-stats': 'HTML统计',
  'html-formatter.feature-stats-desc':
    'Analyze HTML structure with detailed statistics and metrics.',
  'html-formatter.feature-conversion': 'XHTML转换',
  'html-formatter.feature-conversion-desc':
    'Convert HTML to XHTML format with proper XML compliance.',
  'html-formatter.feature-customization': '可自定义选项',
  'html-formatter.feature-customization-desc':
    'Customize formatting preferences including indentation and attribute sorting.',
  'html-formatter.faq-title': '常见问题',
  'html-formatter.faq1-question': '什么是HTML格式化，为什么需要它？',
  'html-formatter.faq1-answer':
    'HTML格式化通过添加适当的缩进、间距和结构使您的代码更易读。它对于Web项目中的调试、维护和协作至关重要。',
  'html-formatter.faq2-question': 'HTML验证如何工作？',
  'html-formatter.faq2-answer':
    '我们的HTML验证器检查语法错误、未闭合标签和结构问题。它提供带有行号的详细错误消息，帮助您快速修复问题。',
  'html-formatter.faq3-question': '什么是HTML压缩？',
  'html-formatter.faq3-answer':
    'HTML压缩移除不必要的空白、注释和格式以减小文件大小。这提高了网站加载速度和性能。',
  'html-formatter.faq4-question': '我可以将HTML转换为XHTML吗？',
  'html-formatter.faq4-answer':
    '是的！我们的工具可以将HTML转换为XHTML格式，确保使用自闭合标签和适当的属性格式实现正确的XML合规性。',
  'html-formatter.faq5-question': '提供哪些HTML统计信息？',
  'html-formatter.faq5-answer':
    '我们提供全面的统计信息，包括行数、字符数、标签数、属性数以及链接、图像和表单的分析。',
  'html-formatter.faq6-question': '使用此工具时我的HTML代码安全吗？',
  'html-formatter.faq6-answer':
    '是的！所有处理都在您的浏览器中本地完成。您的HTML代码永远不会发送到我们的服务器，确保完全的隐私和安全性。',
  'html-formatter.faq7-question': '我可以自定义格式化选项吗？',
  'html-formatter.faq7-answer':
    '当然！您可以自定义缩进大小、使用制表符或空格、保留注释、排序属性，并从各种格式化首选项中选择。',
  'html-formatter.faq8-question': '该工具支持HTML5吗？',
  'html-formatter.faq8-answer':
    '是的！我们的HTML格式化器支持所有HTML5元素、属性和现代Web标准，实现全面的格式化和验证。',
  'html-formatter.faq9-question': '我可以格式化包含嵌入式CSS和JavaScript的HTML吗？',
  'html-formatter.faq9-answer':
    '是的！该工具可以格式化包含嵌入式CSS和JavaScript的HTML文档，在格式化HTML部分时保持适当的结构。',
  'html-formatter.faq10-question': '这个HTML格式化器免费使用吗？',
  'html-formatter.faq10-answer':
    '是的！我们的HTML格式化器完全免费使用，无需注册。所有功能都无限制地可用。',
  'case-converter.faq-title': '常见问题',
  'case-converter.faq-subtitle': '关于大小写转换器的常见问题',
  'case-converter.faq1-question': 'camelCase和PascalCase有什么区别？',
  'case-converter.faq1-answer':
    'camelCase以小写字母开头（例如："myVariable"），而PascalCase以大写字母开头（例如："MyVariable"）。两者都将后续单词的首字母大写。了解更多关于文本格式化和文本分析工具的信息。',
  'case-converter.faq2-question': '如何在线将文本转换为标题大小写？',
  'case-converter.faq2-answer':
    '要在线将文本转换为标题大小写，请使用我们的免费Case Converter工具。只需粘贴您的文本，选择"Title Case"，然后获得即时结果。标题大小写将每个主要单词的首字母大写，如"Hello World"。非常适合标题、标题和正确的格式化。无需注册。',
  'case-converter.faq3-question': '我可以一次转换多行文本吗？',
  'case-converter.faq3-answer':
    '可以！我们的Case Converter支持多行文本转换。只需粘贴您的文本，所有行都将根据您选择的大小写格式进行转换。非常适合处理文档、代码或列表。尝试我们的文本格式化程序以获取更多格式化选项。',
  'case-converter.faq4-question': '什么是snake_case，何时应该使用它？',
  'case-converter.faq4-answer':
    'snake_case使用下划线分隔单词（例如："my_variable_name"）。它通常用于Python编程、数据库命名约定和文件命名。我们的工具支持snake_case转换以及其他编程大小写样式。对Python开发人员和数据库管理员至关重要。',
  'case-converter.faq5-question': '什么是kebab-case，何时应该使用它？',
  'case-converter.faq5-answer':
    'kebab-case使用连字符分隔单词（例如："my-variable-name"）。它通常用于URL、CSS类、HTML属性和命令行工具。我们的转换器处理kebab-case以及文本格式化选项。',
  'case-converter.faq6-question': '交替大小写如何工作？',
  'case-converter.faq6-answer':
    '交替大小写在大写和小写字母之间切换（例如："AlTeRnAtInG cAsE"）。它对创建独特的文本效果、测试大小写敏感性和社交媒体格式化很有用。我们的工具提供即时交替大小写转换。',
  'case-converter.faq7-question': '我可以将文本转换为反向大小写吗？',
  'case-converter.faq7-answer':
    '可以！反向大小写翻转每个字母的大小写 - 大写变为小写，反之亦然。这对于测试应用程序中的大小写敏感性、创建文本效果和数据处理很有用。我们的文本分析器可以帮助分析结果。',
  'case-converter.faq8-question': '大小写转换器是否免费使用？',
  'case-converter.faq8-answer':
    '是的！我们的Case Converter完全免费，无需注册。所有文本处理都在您的浏览器中本地进行，以确保最大的隐私和安全。没有数据被存储或传输到我们的服务器。',
  'case-converter.faq9-question': '如何将文本转换为大写？',
  'case-converter.faq9-answer':
    '使用我们的大小写转换器将文本转换为大写很简单。将您的文本粘贴到输入字段中，从转换选项中选择"UPPERCASE"，所有字母将立即转换为大写字母。大写通常用于强调、标题、首字母缩略词和编程中的常量。非常适合创建引人注目的标题和格式化技术文档。',
  'case-converter.faq10-question': '什么时候应该使用小写转换？',
  'case-converter.faq10-answer':
    '当您需要标准化文本格式、规范化用户输入或准备文本以进行不区分大小写的比较时，小写转换很有用。只需在我们的工具中选择"lowercase"，所有大写字母将转换为小写字母。它通常用于电子邮件地址、用户名、数据库查询和搜索功能中，其中大小写一致性很重要。',
  'case-converter.faq11-question': '什么是slugify，它如何创建SEO友好的URL？',
  'case-converter.faq11-answer':
    'Slugify通过删除特殊字符、用连字符替换空格并转换为小写，将文本转换为URL友好的slug。例如，"My Blog Post Title!"变成"my-blog-post-title"。这对于为博客文章、产品页面和网页内容创建干净、SEO优化的URL至关重要。搜索引擎更喜欢可读的URL，而slug化的文本可以改善SEO排名和用户体验。',
  'encode-decode.tool-name': '编码/解码',
  'encode-decode.faq-title': '常见问题',
  'encode-decode.faq-subtitle': '关于编码/解码的常见问题',
  'encode-decode.faq1-question': '什么是URL编码，为什么我需要它？',
  'encode-decode.faq1-answer':
    'URL编码将特殊字符转换为百分比编码格式（如空格为%20），以便在URL中安全传输。对于Web开发、API通信和处理用户输入至关重要。我们的工具提供即时的URL编码和解码。',
  'encode-decode.faq2-question': 'Base64编码用于什么？',
  'encode-decode.faq2-answer':
    'Base64编码使用64个字符将二进制数据转换为ASCII文本。通常用于电子邮件附件、数据传输、API身份验证和以文本格式存储二进制数据。我们的<a href="/text-analyzer" title="文本分析器">文本分析器</a>可以帮助分析编码内容。',
  'encode-decode.faq3-question': '如何在线解码Base64文本？',
  'encode-decode.faq3-answer':
    '要在线解码Base64文本，请使用我们的免费编码/解码工具。选择"Base64 Decode"，粘贴您的编码文本，即可获得即时结果。非常适合解码API响应、电子邮件附件和数据文件。无需注册。',
  'encode-decode.faq4-question': '什么是HTML编码，为什么它很重要？',
  'encode-decode.faq4-answer':
    'HTML编码将特殊字符转换为HTML实体（如<的&lt;），以防止它们被解释为HTML标签。对于Web安全、防止XSS攻击以及在Web内容中安全显示特殊字符至关重要。',
  'encode-decode.faq5-question': '我可以同时以多种格式编码文本吗？',
  'encode-decode.faq5-answer':
    '是的！我们的工具支持多种编码格式，包括URL、Base64、HTML和JSON。在不同编码方法之间即时转换文本。非常适合使用API、Web应用程序和数据处理工作的开发人员。尝试我们的<a href="/text-formatter" title="文本格式化器">文本格式化器</a>进行额外处理。',
  'encode-decode.faq6-question': '什么是Unicode规范化，什么时候使用它？',
  'encode-decode.faq6-answer':
    'Unicode规范化通过将同一字符的不同Unicode表示转换为一致形式来标准化文本。对于文本比较、搜索功能以及跨不同系统和平台的数据一致性至关重要。',
  'encode-decode.faq7-question': '如何正确转义JSON字符串？',
  'encode-decode.faq7-answer':
    '使用我们的JSON转义功能正确转义JSON字符串中的特殊字符，确保有效的JSON格式。将引号、反斜杠和控制字符转换为其转义等价物。对于API开发和数据序列化至关重要。',
};
